[
  {
    "test_plan_no": "STP-030-01",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.1: Bulk Import Page",
    "description": "Verify that the bulk import page loads correctly with proper authentication",
    "scenario": "Admin user navigates to the bulk import functionality to import multiple test plans",
    "expected_results": "Display the bulk import page with form, instructions, example JSON, and field reference",
    "procedure": "1. Log in as admin user\n2. Navigate to /admin/system-test/bulk-import\n3. Verify page loads completely\n4. Check header shows 'Bulk Import Test Plans' title\n5. Verify import form, instructions, example, and field reference sections are displayed",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-02",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.2: Authentication Security Check",
    "description": "Verify that non-admin users cannot access the bulk import functionality",
    "scenario": "Regular user attempts to access bulk import functionality directly",
    "expected_results": "Access should be denied with 403 Forbidden error for non-admin users",
    "procedure": "1. Log in as regular user (non-admin)\n2. Attempt to navigate to /admin/system-test/bulk-import\n3. Verify 403 Forbidden error is returned\n4. Check redirect to appropriate error page\n5. Ensure no bulk import form is accessible",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-030-03",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.3: Page Header Layout",
    "description": "Verify the page header displays correct title, description, and navigation",
    "scenario": "Admin views the page header to understand bulk import context and navigation options",
    "expected_results": "Display header with 'Bulk Import Test Plans' title, description, and back button",
    "procedure": "1. Navigate to bulk import page\n2. Check title 'Bulk Import Test Plans' is displayed prominently\n3. Verify description 'Import multiple test plans from JSON data'\n4. Confirm 'Back to List' button navigates to test plans list\n5. Check proper styling and fade-in animation",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-04",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.4: Import Form Structure",
    "description": "Verify the import form displays correctly with proper layout and components",
    "scenario": "Admin views import form to understand data input requirements and available actions",
    "expected_results": "Display import form with JSON textarea, validation buttons, and submit button",
    "procedure": "1. Locate 'Import JSON Data' section with blue border and upload icon\n2. Verify large textarea for JSON data input (marked as required)\n3. Check 'Validate JSON' button is present and functional\n4. Confirm 'Load Example' button is available\n5. Verify 'Import Test Plans' submit button is present",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-05",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.5: JSON Textarea Field",
    "description": "Verify the JSON data textarea accepts input and handles formatting correctly",
    "scenario": "Admin enters JSON data into the textarea for validation and import",
    "expected_results": "Textarea accepts JSON input with proper formatting and validation",
    "procedure": "1. Click in JSON data textarea (import_data)\n2. Enter valid JSON array data\n3. Verify text is accepted and properly displayed\n4. Check textarea sizing (20 rows) and styling\n5. Confirm placeholder text and required field indicator",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-06",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.6: JSON Validation Function",
    "description": "Verify the JSON validation function correctly validates data structure and content",
    "scenario": "Admin uses validate JSON button to check data before import",
    "expected_results": "Validation function checks JSON format, structure, and field requirements",
    "procedure": "1. Enter valid JSON array in textarea\n2. Click 'Validate JSON' button\n3. Verify validation results appear in validation results section\n4. Check that valid data shows green success message\n5. Confirm message shows count of valid test plans found",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-07",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.7: Invalid JSON Format Handling",
    "description": "Verify proper error handling when JSON format is invalid",
    "scenario": "Admin enters malformed JSON data and attempts validation",
    "expected_results": "Display clear error message for JSON parsing errors",
    "procedure": "1. Enter invalid JSON (missing brackets, quotes, etc.) in textarea\n2. Click 'Validate JSON' button\n3. Verify red error message appears\n4. Check error message shows 'JSON Parse Error' with specific details\n5. Confirm validation results section shows with red styling",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-08",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.8: Required Field Validation",
    "description": "Verify validation detects missing required fields in test plan objects",
    "scenario": "Admin submits JSON data with missing required fields for validation",
    "expected_results": "Validation identifies and reports all missing required fields",
    "procedure": "1. Create JSON array with test plans missing required fields\n2. Include objects missing test_plan_no, module_name, description, expected_results, or procedure\n3. Click 'Validate JSON' button\n4. Verify validation errors list all missing required fields\n5. Check error format: 'Item X: Missing required field Y'",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-09",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.9: Duplicate Test Plan Number Detection",
    "description": "Verify validation detects duplicate test plan numbers within import data",
    "scenario": "Admin submits JSON data with duplicate test_plan_no values",
    "expected_results": "Validation identifies and reports duplicate test plan numbers",
    "procedure": "1. Create JSON array with multiple test plans using same test_plan_no\n2. Click 'Validate JSON' button\n3. Verify validation error reports duplicate test_plan_no\n4. Check error format: 'Item X: Duplicate test_plan_no Y'\n5. Confirm all duplicates are identified",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-10",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.10: Enum Field Validation",
    "description": "Verify validation checks enum fields for valid values (status, priority, category)",
    "scenario": "Admin submits JSON data with invalid enum field values",
    "expected_results": "Validation identifies and reports invalid enum field values",
    "procedure": "1. Create JSON with invalid test_status (not pending/passed/failed/skipped)\n2. Include invalid priority (not low/medium/high/critical)\n3. Add invalid category (not functional/ui/performance/security/integration)\n4. Click 'Validate JSON' and verify all enum errors are reported\n5. Check error format: 'Item X: Invalid field_name Y'",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-11",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.11: Load Example Function",
    "description": "Verify the load example function populates textarea with valid sample data",
    "scenario": "Admin uses load example feature to understand proper JSON format",
    "expected_results": "Example data is loaded into textarea and automatically validated",
    "procedure": "1. Click 'Load Example' button\n2. Verify textarea is populated with example JSON data\n3. Check that data includes multiple test plan objects\n4. Confirm automatic validation occurs after loading\n5. Verify validation shows success message for example data",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-12",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.12: Auto-formatting on Paste",
    "description": "Verify that pasted JSON data is automatically formatted for readability",
    "scenario": "Admin pastes compressed JSON data and expects proper formatting",
    "expected_results": "Pasted JSON is automatically formatted with proper indentation",
    "procedure": "1. Copy compressed JSON data (single line)\n2. Paste into import_data textarea\n3. Verify data is automatically formatted with proper indentation\n4. Check that formatting occurs after 100ms delay\n5. Confirm formatting only occurs for valid JSON",
    "test_status": "pending",
    "priority": "low",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-13",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.13: Form Submission Validation",
    "description": "Verify form validation prevents submission of empty or invalid data",
    "scenario": "Admin attempts to submit form without data or with invalid data",
    "expected_results": "Form validation prevents submission and shows appropriate alerts",
    "procedure": "1. Attempt to submit form with empty textarea\n2. Verify alert 'Please provide JSON data to import.'\n3. Enter invalid JSON and attempt submission\n4. Check alert 'Please provide a valid JSON array with test plan data.'\n5. Confirm form submission is prevented in both cases",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-14",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.14: Import Confirmation Dialog",
    "description": "Verify confirmation dialog appears before actual import submission",
    "scenario": "Admin submits valid data and expects confirmation before import",
    "expected_results": "Confirmation dialog shows number of test plans to be imported",
    "procedure": "1. Enter valid JSON array with multiple test plans\n2. Click 'Import Test Plans' button\n3. Verify confirmation dialog appears\n4. Check dialog message: 'Are you sure you want to import X test plan(s)?'\n5. Test both confirm and cancel options",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-15",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.15: Successful Import Process",
    "description": "Verify successful import process creates test plans and redirects appropriately",
    "scenario": "Admin submits valid JSON data and completes successful import",
    "expected_results": "Test plans are created in database and user is redirected to test plans list",
    "procedure": "1. Enter valid JSON array with test plans\n2. Submit form and confirm import\n3. Verify POST request to /admin/system-test/bulk-import\n4. Check test plans are created in database\n5. Confirm redirect to test plans list with success message",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-16",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.16: Import Error Handling",
    "description": "Verify proper error handling when import process fails",
    "scenario": "Import process encounters server-side errors or data issues",
    "expected_results": "Display appropriate error messages and maintain form data",
    "procedure": "1. Simulate server error during import process\n2. Submit valid JSON data\n3. Verify error flash message is displayed\n4. Check that form data is preserved after error\n5. Confirm error is logged on server side",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-17",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.17: Empty Array Handling",
    "description": "Verify proper handling when JSON array is empty",
    "scenario": "Admin submits valid JSON format but with empty array",
    "expected_results": "Validation detects empty array and shows appropriate error",
    "procedure": "1. Enter valid JSON format: []\n2. Click 'Validate JSON' button\n3. Verify error message 'Array cannot be empty'\n4. Check red error styling is applied\n5. Confirm form submission is prevented",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-18",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.18: Non-Array JSON Handling",
    "description": "Verify proper handling when JSON is valid but not an array",
    "scenario": "Admin submits valid JSON object instead of array",
    "expected_results": "Validation detects non-array data and shows appropriate error",
    "procedure": "1. Enter valid JSON object (not array): {\"test\": \"data\"}\n2. Click 'Validate JSON' button\n3. Verify error message 'Data must be a JSON array'\n4. Check red error styling is applied\n5. Confirm import is not allowed",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-19",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.19: Instructions Section Display",
    "description": "Verify the instructions section provides clear guidance for JSON formatting",
    "scenario": "Admin reviews instructions to understand import data requirements",
    "expected_results": "Display comprehensive instructions with proper styling and organization",
    "procedure": "1. Locate instructions section with blue styling and info icon\n2. Verify list of requirements includes JSON array format\n3. Check required fields instruction\n4. Confirm line break instruction (use \\n)\n5. Verify uniqueness requirement for test_plan_no",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-20",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.20: Example JSON Section",
    "description": "Verify the example JSON section displays properly formatted sample data",
    "scenario": "Admin references example JSON to understand correct data format",
    "expected_results": "Display properly formatted JSON example with syntax highlighting",
    "procedure": "1. Locate example JSON section\n2. Verify JSON is displayed with proper formatting\n3. Check syntax highlighting (green text on dark background)\n4. Confirm example includes both required and optional fields\n5. Verify example uses proper line break format (\\n)",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-21",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.21: Field Reference Section",
    "description": "Verify the field reference section provides complete field information",
    "scenario": "Admin references field guide to understand available fields and values",
    "expected_results": "Display comprehensive field reference with required/optional fields and enum values",
    "procedure": "1. Locate field reference section with yellow styling\n2. Verify required fields list: test_plan_no, module_name, description, expected_results, procedure\n3. Check optional fields list: screen_design_ref, scenario, test_status, priority, category\n4. Confirm enum values for status, priority, and category\n5. Verify styling and readability",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-22",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.22: Responsive Layout Design",
    "description": "Verify the page layout adapts properly to different screen sizes",
    "scenario": "Admin accesses bulk import page on various devices and screen sizes",
    "expected_results": "Page layout adapts properly with responsive grid system",
    "procedure": "1. View page on desktop (1920x1080) - verify 2-column layout\n2. Test on tablet view (768px width) - check layout adaptation\n3. Check mobile view (375px width) - verify single column stacking\n4. Confirm lg:col-span-2 behavior for main content\n5. Verify all sections remain accessible on all screen sizes",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-23",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.23: CSRF Protection Validation",
    "description": "Verify that CSRF token is properly included and validated during import",
    "scenario": "Import form submission includes proper CSRF protection against attacks",
    "expected_results": "CSRF token is present in form and validated on submission",
    "procedure": "1. Check form includes hidden CSRF token field\n2. Verify token value is properly generated\n3. Test form submission with valid token succeeds\n4. Attempt submission without token and verify rejection\n5. Confirm CSRF protection doesn't interfere with legitimate imports",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-030-24",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.24: Large Dataset Import",
    "description": "Verify system handles import of large numbers of test plans efficiently",
    "scenario": "Admin attempts to import large dataset (50+ test plans) to test performance",
    "expected_results": "System processes large import efficiently without timeout or memory issues",
    "procedure": "1. Create JSON array with 50+ test plan objects\n2. Validate large dataset using validation function\n3. Submit import and monitor processing time\n4. Verify all test plans are created successfully\n5. Check system performance and memory usage",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-030-25",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.25: Page Title and Meta Information",
    "description": "Verify that browser page title shows 'Bulk Import Test Plans'",
    "scenario": "Admin views browser tab title to understand current page context",
    "expected_results": "Browser tab shows 'Bulk Import Test Plans' title",
    "procedure": "1. Navigate to bulk import page\n2. Check browser tab title shows 'Bulk Import Test Plans'\n3. Verify title is clear and descriptive\n4. Confirm title helps with browser history and bookmarking\n5. Check title distinguishes from other admin pages",
    "test_status": "pending",
    "priority": "low",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-26",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.26: Navigation Integration",
    "description": "Verify proper integration with admin navigation and workflow",
    "scenario": "Admin navigates to and from bulk import page as part of test management workflow",
    "expected_results": "Bulk import integrates seamlessly with test management navigation",
    "procedure": "1. Navigate to bulk import from test plans list\n2. Use 'Back to List' button to return\n3. Navigate to bulk import from dashboard\n4. Test integration with other admin pages\n5. Verify all navigation maintains proper context",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-27",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.27: Browser Compatibility Testing",
    "description": "Verify bulk import functionality works across different web browsers",
    "scenario": "Admin accesses bulk import using various browsers to ensure cross-browser compatibility",
    "expected_results": "Bulk import functionality works correctly in Chrome, Firefox, Safari, and Edge",
    "procedure": "1. Test bulk import in Google Chrome (latest version)\n2. Verify functionality in Mozilla Firefox\n3. Check display and features in Safari (if available)\n4. Test in Microsoft Edge browser\n5. Confirm all JavaScript features work in each browser",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-030-28",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.28: Dark Mode Compatibility",
    "description": "Verify that bulk import page displays correctly in both light and dark themes",
    "scenario": "Admin switches between light and dark modes to ensure proper theming support",
    "expected_results": "All page elements display with appropriate colors and contrast in both themes",
    "procedure": "1. View bulk import page in light mode\n2. Switch to dark mode (if theme toggle available)\n3. Verify all text remains readable with proper contrast\n4. Check form sections use appropriate dark theme colors\n5. Confirm JSON example syntax highlighting adapts to theme",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-29",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.29: Accessibility Compliance",
    "description": "Verify that bulk import page meets accessibility standards for screen readers and keyboard navigation",
    "scenario": "Admin and accessibility tools test page for compliance with accessibility standards",
    "expected_results": "Page is fully accessible via keyboard navigation and screen readers",
    "procedure": "1. Navigate entire page using only keyboard (Tab, Enter, arrows)\n2. Test with screen reader for proper label reading\n3. Verify focus indicators are visible on all interactive elements\n4. Check required field indicators are announced by screen readers\n5. Confirm proper semantic HTML structure and ARIA labels",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-030-30",
    "module_name": "Bulk Import Test Plans",
    "screen_design_ref": "Figure 30.30: Complete Import Workflow Integration",
    "description": "Verify complete import workflow from navigation through successful test plan creation",
    "scenario": "Admin completes entire bulk import workflow including preparation, validation, and confirmation",
    "expected_results": "Complete workflow provides seamless bulk import experience with proper validation and feedback",
    "procedure": "1. Navigate to bulk import from test plans list\n2. Review instructions and field reference\n3. Load example data and validate it\n4. Modify example with custom test plans\n5. Validate custom data successfully\n6. Submit import with confirmation\n7. Verify redirect to test plans list with success message\n8. Confirm all imported test plans appear in list with correct data",
    "test_status": "pending",
    "priority": "critical",
    "category": "integration"
  }
]
