[
  {
    "test_plan_no": "STP-003-01",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.1: Contact Page Layout",
    "description": "Verify that the Contact page loads correctly when accessing the /contact URL",
    "scenario": "User navigates to the Contact page to send a message to CyberQuest team",
    "expected_results": "Display the complete Contact page with header section, contact form, and contact information panel",
    "procedure": "1. Open web browser\n2. Navigate to http://localhost:5000/contact\n3. Verify page loads completely\n4. Check page title displays 'Contact'\n5. Verify contact form and contact info sections are visible",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-02",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.2: Page Header Section",
    "description": "Verify the contact page header displays correctly with title and subtitle",
    "scenario": "User views the Contact page header with gradient background and animated elements",
    "expected_results": "Display 'Contact Us' title, subtitle text, animated background elements, and proper gradient styling",
    "procedure": "1. Navigate to /contact page\n2. Verify header title 'Contact Us' is visible\n3. Check subtitle 'We'd love to hear from you and discuss your next project' is displayed\n4. Verify gradient background from green to blue is applied\n5. Check animated floating elements are present\n6. Verify fade-in animations work properly",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-003-03",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.3: Contact Form Validation",
    "description": "Verify form validation works correctly for all required fields",
    "scenario": "User submits contact form with invalid or missing data",
    "expected_results": "Form displays appropriate validation errors for missing or invalid fields",
    "procedure": "1. Navigate to /contact page\n2. Click 'Send Message' button without filling any fields\n3. Verify HTML5 validation messages appear\n4. Fill name with single character, verify validation\n5. Enter invalid email format, verify validation\n6. Enter subject with less than 3 characters, verify validation\n7. Enter message with less than 10 characters, verify validation\n8. Test maximum length limits for each field",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-04",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.4: Contact Form Submission",
    "description": "Verify successful contact form submission with valid data",
    "scenario": "User fills out contact form with valid information and submits",
    "expected_results": "Form submits successfully, displays success message, and sends email notifications",
    "procedure": "1. Navigate to /contact page\n2. Fill 'Full Name' with 'John Doe'\n3. Fill 'Email Address' with 'john.doe@example.com'\n4. Fill 'Subject' with 'Test Contact Form'\n5. Fill 'Message' with detailed test message (min 10 characters)\n6. Complete hCaptcha if enabled\n7. Click 'Send Message' button\n8. Verify success flash message appears\n9. Check form redirects properly",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-05",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.5: Field Length Validation",
    "description": "Verify form field length validation works correctly",
    "scenario": "User enters data exceeding maximum field lengths",
    "expected_results": "Form rejects data exceeding limits and displays appropriate error messages",
    "procedure": "1. Navigate to /contact page\n2. Enter name longer than 100 characters\n3. Verify validation error appears\n4. Enter email longer than 120 characters\n5. Verify validation error appears\n6. Enter subject longer than 200 characters\n7. Verify validation error appears\n8. Enter message longer than 2000 characters\n9. Verify validation error appears\n10. Check all error messages are user-friendly",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-06",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.6: Email Format Validation",
    "description": "Verify email address format validation using regex pattern",
    "scenario": "User enters various email formats to test validation",
    "expected_results": "Only valid email formats are accepted, invalid formats are rejected",
    "procedure": "1. Navigate to /contact page\n2. Test valid email: 'user@example.com'\n3. Test invalid email: 'invalid-email'\n4. Test invalid email: 'user@'\n5. Test invalid email: '@example.com'\n6. Test invalid email: 'user@example'\n7. Test invalid email: 'user.example.com'\n8. Test edge case: 'user+tag@example.co.uk'\n9. Verify only valid formats are accepted",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-07",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.7: hCaptcha Integration",
    "description": "Verify hCaptcha integration works correctly when enabled",
    "scenario": "User submits form with and without completing hCaptcha verification",
    "expected_results": "Form requires hCaptcha completion when enabled, rejects submission without verification",
    "procedure": "1. Navigate to /contact page\n2. Check if hCaptcha widget is visible\n3. Fill all form fields with valid data\n4. Submit form without completing hCaptcha\n5. Verify error message about captcha verification\n6. Complete hCaptcha verification\n7. Submit form again\n8. Verify form submits successfully\n9. Test hCaptcha refresh functionality",
    "test_status": "pending",
    "priority": "medium",
    "category": "security"
  },
  {
    "test_plan_no": "STP-003-08",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.8: Contact Information Display",
    "description": "Verify contact information panel displays correctly",
    "scenario": "User views contact information section for business details",
    "expected_results": "Display contact information with address, email, and proper formatting",
    "procedure": "1. Navigate to /contact page\n2. Scroll to contact information panel\n3. Verify 'Get in Touch' heading is displayed\n4. Check address card shows 'CyberQuest HQ, Makati City, Metro Manila, Philippines'\n5. Verify email card shows 'contact@cyberquest.com'\n6. Check email link is clickable and opens email client\n7. Verify icons are displayed correctly\n8. Test hover effects on contact cards",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-003-09",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.9: Form Animation and UX",
    "description": "Verify form animations, transitions, and user experience elements",
    "scenario": "User interacts with form elements and observes visual feedback",
    "expected_results": "Form elements have smooth animations, hover effects, and visual feedback",
    "procedure": "1. Navigate to /contact page\n2. Hover over form input fields, verify hover effects\n3. Click into input fields, verify focus states\n4. Check fade-in animations for form elements\n5. Hover over 'Send Message' button, verify scale effect\n6. Test form field transitions and shadows\n7. Verify loading spinner appears during submission\n8. Check submit button state changes during processing",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-003-10",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.10: CSRF Protection",
    "description": "Verify CSRF token protection is implemented correctly",
    "scenario": "Form submissions include proper CSRF token for security",
    "expected_results": "CSRF token is present in form and validated on submission",
    "procedure": "1. Navigate to /contact page\n2. View page source and locate csrf_token hidden field\n3. Verify CSRF token value is generated\n4. Fill form with valid data and submit\n5. Check network tab for CSRF token in POST request\n6. Test form submission with modified/missing CSRF token\n7. Verify form rejection without valid CSRF token\n8. Test CSRF token refresh on page reload",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-003-11",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.11: Email Notification System",
    "description": "Verify email notifications are sent correctly after form submission",
    "scenario": "User submits contact form and expects email notifications to admin and user",
    "expected_results": "Admin receives contact notification email, user receives confirmation email",
    "procedure": "1. Configure email server settings in application\n2. Navigate to /contact page\n3. Fill form with test email address\n4. Submit form successfully\n5. Check admin email inbox for contact notification\n6. Verify admin email contains user message and details\n7. Check user email inbox for auto-reply confirmation\n8. Verify confirmation email contains thank you message\n9. Test email content formatting (HTML and text versions)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-12",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.12: Database Storage",
    "description": "Verify contact submissions are stored correctly in database",
    "scenario": "Contact form data is saved to database when submitted",
    "expected_results": "Contact submission data is stored in database with proper validation",
    "procedure": "1. Navigate to /contact page\n2. Fill form with complete test data\n3. Submit form successfully\n4. Check database contact table for new record\n5. Verify all form fields are stored correctly\n6. Check timestamp is recorded properly\n7. Verify data integrity and proper escaping\n8. Test database error handling scenarios",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-13",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.13: Error Handling",
    "description": "Verify error handling for various failure scenarios",
    "scenario": "Test contact form behavior during database errors, email failures, and other exceptions",
    "expected_results": "Graceful error handling with user-friendly error messages",
    "procedure": "1. Navigate to /contact page\n2. Test with database connection disabled\n3. Verify appropriate error message is displayed\n4. Test with email server misconfigured\n5. Submit form and verify fallback behavior\n6. Test with invalid form data injection attempts\n7. Verify application doesn't crash on errors\n8. Check error logging functionality\n9. Test Vercel deployment mode (DISABLE_DATABASE=True)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-003-14",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.14: Responsive Design",
    "description": "Verify contact page is responsive across different screen sizes",
    "scenario": "User views contact page on mobile, tablet, and desktop devices",
    "expected_results": "Page layout adapts properly to different screen sizes with usable form elements",
    "procedure": "1. Navigate to /contact page on desktop (1920x1080)\n2. Verify two-column layout (form and contact info)\n3. Resize browser to tablet size (768px width)\n4. Check layout adjustments and readability\n5. Resize to mobile size (375px width)\n6. Verify form stacks vertically\n7. Test form input accessibility on touch devices\n8. Check button sizes are touch-friendly\n9. Verify all content remains accessible and readable",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-003-15",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.15: Dark Mode Compatibility",
    "description": "Verify contact page displays correctly in dark mode",
    "scenario": "User toggles to dark mode and uses contact form",
    "expected_results": "All elements display properly with dark theme colors and readable text",
    "procedure": "1. Navigate to /contact page\n2. Toggle dark mode using theme switcher\n3. Verify page header has dark gradient background\n4. Check form fields have dark styling\n5. Verify text color contrast is adequate\n6. Test form input focus states in dark mode\n7. Check contact information cards have dark backgrounds\n8. Verify button styling works in dark theme\n9. Test all hover effects maintain visibility",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-003-16",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.16: Performance and Loading",
    "description": "Verify contact page loads efficiently with external resources",
    "scenario": "User accesses contact page and expects fast loading with all assets",
    "expected_results": "Page loads within acceptable time with CSS, JavaScript, and images",
    "procedure": "1. Clear browser cache\n2. Open browser developer tools Performance tab\n3. Navigate to /contact page\n4. Record page load time\n5. Verify contact.css loads successfully\n6. Check contact.js loads without errors\n7. Verify hCaptcha scripts load when enabled\n8. Test form functionality after all scripts load\n9. Check for any console errors or warnings",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-003-17",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.17: Input Sanitization",
    "description": "Verify form inputs are properly sanitized and validated",
    "scenario": "User attempts to submit potentially malicious input through contact form",
    "expected_results": "All input is properly sanitized and validated before processing",
    "procedure": "1. Navigate to /contact page\n2. Test XSS attempt: enter '<script>alert(\"test\")</script>' in name field\n3. Verify script is not executed\n4. Test SQL injection patterns in form fields\n5. Enter special characters and unicode in all fields\n6. Test very long strings to check buffer handling\n7. Submit form and verify data is properly escaped\n8. Check database storage doesn't contain raw malicious input\n9. Verify email notifications don't execute injected code",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-003-18",
    "module_name": "Contact-Page",
    "screen_design_ref": "Figure 3.18: Accessibility Compliance",
    "description": "Verify contact page meets accessibility standards (WCAG)",
    "scenario": "User with disabilities accesses contact page using assistive technologies",
    "expected_results": "Page is fully accessible with proper ARIA labels, keyboard navigation, and screen reader support",
    "procedure": "1. Navigate to /contact page\n2. Test keyboard navigation through all form elements\n3. Verify tab order is logical\n4. Check form labels are properly associated with inputs\n5. Test form with screen reader\n6. Verify ARIA attributes are present where needed\n7. Check color contrast ratios meet WCAG AA standards\n8. Test form submission using only keyboard\n9. Verify error messages are announced by screen readers",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  }
]
