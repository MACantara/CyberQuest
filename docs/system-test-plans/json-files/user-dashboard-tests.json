[
  {
    "test_plan_no": "STP-014-01",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.1: User Dashboard Page Layout",
    "description": "Verify that the User Dashboard page loads correctly when accessing /profile/dashboard with authenticated user",
    "scenario": "Logged-in user navigates to their dashboard to view learning progress and cybersecurity achievements",
    "expected_results": "Display the complete dashboard with stats overview, progress tracking, skill analysis, and adaptive learning insights",
    "procedure": "1. Login with valid user credentials\n2. Navigate to http://localhost:5000/profile/dashboard\n3. Verify page loads completely\n4. Check page title displays 'Dashboard'\n5. Verify welcome message with username\n6. Check all dashboard sections are visible and properly styled\n7. Verify gradient background and responsive layout",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-02",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.2: Dashboard Header Design",
    "description": "Verify the dashboard header displays correctly with welcome message and navigation",
    "scenario": "User views the dashboard header with personalized welcome and quick access buttons",
    "expected_results": "Display welcome message with username and navigation buttons to levels overview",
    "procedure": "1. Navigate to /profile/dashboard page while logged in\n2. Verify 'Welcome back, [username]!' heading is displayed\n3. Check subtitle 'Track your cybersecurity learning progress and achievements'\n4. Verify responsive text sizing (text-3xl md:text-4xl)\n5. Check header uses flex layout for mobile/desktop\n6. Verify text colors in light and dark mode\n7. Test header animation (animate-fade-in-up)",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-03",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.3: Stats Overview Cards",
    "description": "Verify stats overview cards display user progress metrics correctly",
    "scenario": "User views four stat cards showing total XP, levels completed, learning streak, and current rank",
    "expected_results": "Display four responsive stat cards with proper icons, values, and color schemes",
    "procedure": "1. Navigate to dashboard page\n2. Verify four stat cards are displayed in grid layout (grid-cols-1 md:grid-cols-4)\n3. Check Total XP card with blue styling and trophy icon\n4. Verify Levels Completed card with green styling and target icon\n5. Check Current Streak card with orange styling and fire icon\n6. Verify Rank card with purple styling and award icon\n7. Test card animations with staggered delays (0.1s, 0.2s, 0.3s, 0.4s)\n8. Check responsive layout on mobile devices",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-04",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.4: Learning Progress Section",
    "description": "Verify learning progress section displays overall progress and level completion status",
    "scenario": "User views their overall learning progress with completion percentage and level grid",
    "expected_results": "Display progress bar with percentage and grid of levels showing completion status",
    "procedure": "1. Navigate to dashboard page\n2. Verify 'Learning Progress' section in left column (lg:col-span-2)\n3. Check overall progress percentage display\n4. Verify progress bar with correct width and styling\n5. Check level progress grid (grid-cols-2 sm:grid-cols-5)\n6. Verify each level shows completion status (completed/unlocked/locked)\n7. Test progress bar animation on page load\n8. Check responsive grid layout on different screen sizes",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-05",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.5: Quick Actions Panel",
    "description": "Verify quick actions panel provides easy access to next level and navigation",
    "scenario": "User views quick actions sidebar with buttons for next level, levels overview, and profile",
    "expected_results": "Display quick actions panel with properly styled navigation buttons",
    "procedure": "1. Navigate to dashboard page\n2. Verify 'Quick Actions' panel in right column\n3. Check 'Continue Next Level' button if next_level exists\n4. Verify button links to correct level start URL\n5. Check 'View All Levels' button with levels overview link\n6. Verify 'View Profile' button with profile page link\n7. Test button styling and hover effects\n8. Check responsive layout on mobile devices",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-06",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.6: Learning Recommendations Section",
    "description": "Verify learning recommendations section displays AI-powered suggestions",
    "scenario": "User views personalized learning recommendations from adaptive learning system",
    "expected_results": "Display learning recommendations with lightbulb icon and recommendation cards",
    "procedure": "1. Navigate to dashboard page with user who has recommendations\n2. Verify 'Learning Recommendations' section with lightbulb icon\n3. Check recommendation cards with gradient backgrounds\n4. Verify each recommendation shows title, description, type, and confidence\n5. Test 'Accept' button functionality on recommendations\n6. Check empty state message for users without recommendations\n7. Verify robot icon and helpful text for empty state\n8. Test recommendation interaction with JavaScript",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-07",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.7: Skill Breakdown Section",
    "description": "Verify skill breakdown section displays user skill analysis and proficiency levels",
    "scenario": "User views their skill assessment breakdown with proficiency indicators",
    "expected_results": "Display skill breakdown with progress bars and proficiency levels for each skill",
    "procedure": "1. Navigate to dashboard page with user who has skill assessments\n2. Verify 'Skill Breakdown' section with graph-up icon\n3. Check skill list shows top 6 skills from skill_analysis\n4. Verify each skill displays name, proficiency level, and score\n5. Check progress bars for skill scores\n6. Test empty state for users without skill assessments\n7. Verify bar-chart icon and helpful text for empty state\n8. Check skill name formatting (replace '_', title case)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-08",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.8: Learning Analytics Dashboard",
    "description": "Verify learning analytics section displays engagement metrics and insights",
    "scenario": "User views learning analytics with engagement score, session stats, and preferred time",
    "expected_results": "Display learning analytics with metrics grid and personalized insights",
    "procedure": "1. Navigate to dashboard page with user who has learning patterns\n2. Verify 'Learning Analytics' section with analytics icon\n3. Check engagement score display with circular progress\n4. Verify session stats show total sessions count\n5. Check preferred time indicator (morning/afternoon/evening learner)\n6. Verify analytics insights section if recommendations exist\n7. Test metrics grid responsive layout (grid-cols-1 md:grid-cols-3)\n8. Check conditional display based on learning_patterns.status",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-09",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.9: Adaptive Learning Data Integration",
    "description": "Verify dashboard integrates properly with adaptive learning system data",
    "scenario": "Dashboard displays real user progress data from adaptive learning models",
  "expected_results": "All dashboard metrics reflect actual user data from AdaptiveUserProgress, SkillAssessment, and LearningRecommendation models",
  "procedure": "1. Navigate to dashboard with user who has completed levels\n2. Verify total_xp matches AdaptiveUserProgress.get_user_progress_summary()\n3. Check completed_levels reflects actual completion status\n4. Verify learning_streak shows correct streak data\n5. Check user_rank displays appropriate rank\n6. Verify skill_analysis shows real SkillAssessment data\n7. Check recommendations display actual LearningRecommendation data\n8. Test progress_percentage calculation accuracy",
    "test_status": "pending",
    "priority": "critical",
    "category": "integration"
  },
  {
    "test_plan_no": "STP-014-10",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.10: Level Progress Visualization",
    "description": "Verify level progress grid displays correct status for each cybersecurity level",
    "scenario": "User views level grid showing completed, unlocked, and locked levels with proper styling",
    "expected_results": "Level grid displays accurate completion and unlock status for all CYBERSECURITY_LEVELS",
    "procedure": "1. Navigate to dashboard page\n2. Verify level grid shows all levels from CYBERSECURITY_LEVELS\n3. Check completed levels show completion styling\n4. Verify unlocked levels are accessible but not completed\n5. Check locked levels show locked styling\n6. Verify level unlocking logic (first level unlocked, others require previous completion)\n7. Test level data includes score, attempts, time_spent, xp_earned\n8. Check adaptive difficulty recommendations for available levels",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-11",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.11: Blue Team vs Red Team Integration",
    "description": "Verify Blue Team vs Red Team mode integration and unlock status",
    "scenario": "User views Blue Team vs Red Team progress and unlock requirements",
    "expected_results": "Blue Team mode shows proper unlock status and progress data",
  "procedure": "1. Navigate to dashboard with user who has completed first level\n2. Check blue_team_unlocked status (should be true after completing first simulation level)\n3. Verify blue_team_progress data if user has played Blue Team mode\n4. Check Blue Team progress display in dashboard\n5. Test with user who hasn't completed first level (should be locked)\n6. Verify unlock requirement messaging\n7. Check Blue Team navigation if unlocked\n8. Test progress data integration with AdaptiveUserProgress model",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-12",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.12: JavaScript Progress Bar Animation",
    "description": "Verify JavaScript dashboard animations work correctly on page load",
    "scenario": "User observes smooth progress bar animations when dashboard loads",
    "expected_results": "Progress bars animate from 0% to target width with smooth transitions",
    "procedure": "1. Clear browser cache and navigate to dashboard\n2. Observe progress bar animations on page load\n3. Verify progress bars start at 0% width\n4. Check bars animate to correct width after 500ms delay\n5. Test animation performance and smoothness\n6. Verify dashboard.js loads correctly\n7. Check console for any JavaScript errors\n8. Test animations work across different browsers",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-13",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.13: Adaptive Learning API Integration",
    "description": "Verify dashboard integrates with adaptive learning API endpoints",
    "scenario": "Dashboard makes AJAX requests to adaptive learning endpoints for dynamic data",
    "expected_results": "Dashboard successfully loads adaptive learning preferences and suggestions via API",
    "procedure": "1. Navigate to dashboard page\n2. Open browser developer tools Network tab\n3. Verify AJAX requests to /api/adaptive/preferences\n4. Check requests to /api/adaptive/next-activity\n5. Test recommendation acceptance via /api/adaptive/recommendations/{id}/action\n6. Verify API error handling for failed requests\n7. Check console warnings for API failures\n8. Test API integration updates UI properly",
    "test_status": "pending",
    "priority": "medium",
    "category": "integration"
  },
  {
    "test_plan_no": "STP-014-14",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.14: Authentication Required Access",
    "description": "Verify dashboard page requires user authentication and redirects unauthenticated users",
    "scenario": "Unauthenticated user attempts to access dashboard page",
    "expected_results": "Redirect unauthenticated users to login page with appropriate message",
    "procedure": "1. Ensure user is logged out\n2. Navigate directly to http://localhost:5000/profile/dashboard\n3. Verify redirect to login page\n4. Check authentication required message or behavior\n5. Login with valid credentials\n6. Verify successful access to dashboard page\n7. Test session timeout scenario\n8. Check redirect preservation after login",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-014-15",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.15: Database Disabled Handling",
    "description": "Verify proper handling when database is disabled (Vercel environment)",
    "scenario": "User attempts to access dashboard in deployment environment with disabled database",
    "expected_results": "Display warning message about dashboard unavailability and redirect to home",
    "procedure": "1. Set DISABLE_DATABASE config to True\n2. Navigate to /profile/dashboard page while logged in\n3. Verify warning message 'User dashboard is not available in this deployment environment.'\n4. Check redirect to home page\n5. Verify no dashboard content is displayed\n6. Test user experience with clear messaging\n7. Check no database operations are attempted\n8. Verify graceful fallback behavior",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-16",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.16: Recommendation Interaction",
    "description": "Verify learning recommendation interaction and acceptance functionality",
    "scenario": "User interacts with learning recommendations and accepts suggestions",
    "expected_results": "Recommendation acceptance updates UI and makes API calls correctly",
    "procedure": "1. Navigate to dashboard with learning recommendations\n2. Click 'Accept' button on a recommendation\n3. Verify AJAX POST to /api/adaptive/recommendations/{id}/action\n4. Check recommendation UI updates to show accepted state\n5. Verify recommendation opacity changes to 0.5\n6. Check success message displays in recommendation card\n7. Test error handling for failed API calls\n8. Verify JavaScript acceptRecommendation() function works",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-17",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.17: Next Activity Suggestions",
    "description": "Verify next activity suggestions load and display correctly",
    "scenario": "Dashboard loads personalized next activity suggestions from adaptive learning engine",
    "expected_results": "Next activity suggestions display with proper formatting and navigation links",
    "procedure": "1. Navigate to dashboard page\n2. Verify loadAdaptiveLearningData() function executes\n3. Check AJAX request to /api/adaptive/next-activity\n4. Verify next activity suggestion updates UI\n5. Check suggestion displays type, reason, and action button\n6. Test simulation suggestions link to correct level\n7. Verify Blue Team suggestions link to Blue Team mode\n8. Check suggestion container updates properly",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-18",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.18: Form Animation Sequence",
    "description": "Verify dashboard sections animate correctly on page load",
    "scenario": "User observes dashboard sections appearing with staggered animations",
    "expected_results": "Dashboard sections appear in sequence with proper fade-in animations",
    "procedure": "1. Navigate to dashboard page (clear cache first)\n2. Observe animation sequence on page load\n3. Verify header animates first (animate-fade-in-up)\n4. Check stats cards animate with 0.1s-0.4s delays\n5. Verify progress section animates with 0.5s delay\n6. Check quick actions animate with 0.6s delay\n7. Verify recommendations and skills animate with 0.7s-0.8s delays\n8. Check analytics section animates with 0.9s delay\n9. Test animation performance and smoothness",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-19",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.19: Dark Mode Compatibility",
    "description": "Verify dashboard displays correctly in dark mode",
    "scenario": "User toggles dark mode and uses dashboard page",
    "expected_results": "All elements display properly with dark theme colors and proper contrast",
    "procedure": "1. Navigate to dashboard page\n2. Toggle dark mode using theme switcher\n3. Verify background gradient changes to dark theme (dark:from-gray-900 dark:to-gray-800)\n4. Check card backgrounds use dark theme (dark:bg-gray-800)\n5. Verify text colors invert properly (dark:text-white)\n6. Test stat card icon backgrounds in dark mode\n7. Check progress bars and recommendation cards styling\n8. Verify border colors adapt (dark:border-gray-700)\n9. Test accessibility and contrast ratios",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-20",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.20: Responsive Design",
    "description": "Verify dashboard is responsive across different screen sizes",
    "scenario": "User accesses dashboard on mobile, tablet, and desktop devices",
    "expected_results": "Dashboard adapts properly to different screen sizes while maintaining functionality",
    "procedure": "1. Navigate to dashboard on desktop (1920x1080)\n2. Verify max-width constraint (max-w-7xl) and grid layouts\n3. Resize browser to tablet size (768px width)\n4. Check stats grid changes (grid-cols-1 md:grid-cols-4)\n5. Verify progress section layout (lg:col-span-2)\n6. Resize to mobile size (375px width)\n7. Check header layout adapts (flex-col sm:flex-row)\n8. Test level grid responsiveness (grid-cols-2 sm:grid-cols-5)\n9. Verify analytics grid adapts (grid-cols-1 md:grid-cols-3)\n10. Test landscape and portrait orientations",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-014-21",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.21: Data Refresh and Updates",
    "description": "Verify dashboard data refreshes and updates correctly",
    "scenario": "Dashboard data updates when user completes activities or learning patterns change",
    "expected_results": "Dashboard reflects current user progress and updates dynamically",
    "procedure": "1. Note current dashboard metrics\n2. Complete a cybersecurity level in another tab\n3. Return to dashboard and refresh page\n4. Verify updated progress metrics\n5. Check level completion status updates\n6. Test skill assessment updates\n7. Verify XP and streak updates\n8. Check automatic data refresh (5-minute interval)\n9. Test real-time data synchronization",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-22",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.22: Empty State Handling",
    "description": "Verify dashboard handles empty states gracefully for new users",
    "scenario": "New user with no progress views dashboard with appropriate empty state messages",
    "expected_results": "Dashboard shows helpful empty states with guidance for getting started",
    "procedure": "1. Create new user account with no progress\n2. Navigate to dashboard page\n3. Verify stats show zero values appropriately\n4. Check recommendations empty state with robot icon\n5. Verify skills empty state with bar-chart icon\n6. Check helpful messages guide user to start learning\n7. Test empty state styling and layout\n8. Verify all empty states provide clear next steps",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-23",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.23: Navigation Integration",
    "description": "Verify dashboard navigation links work correctly and maintain context",
    "scenario": "User navigates from dashboard to various sections and returns with preserved context",
    "expected_results": "All navigation links work correctly and user context is maintained",
    "procedure": "1. Navigate to dashboard page\n2. Click 'Continue Next Level' button (if available)\n3. Verify navigation to correct level start page\n4. Use browser back to return to dashboard\n5. Click 'View All Levels' link\n6. Verify navigation to levels overview\n7. Test 'View Profile' link navigation\n8. Check recommendation action links work correctly\n9. Verify user context preservation throughout navigation",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-24",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.24: Performance and Loading",
    "description": "Verify dashboard page loads efficiently with optimal performance",
    "scenario": "User accesses dashboard and expects fast loading times with all data",
    "expected_results": "Dashboard loads within acceptable time limits with all styling and functionality",
    "procedure": "1. Clear browser cache\n2. Open browser developer tools Performance tab\n3. Navigate to dashboard page\n4. Record page load time and performance metrics\n5. Verify total load time is under 3 seconds\n6. Check First Contentful Paint (FCP) is under 1.5 seconds\n7. Verify Largest Contentful Paint (LCP) is acceptable\n8. Test page load on slower network connections\n9. Check for render-blocking resources\n10. Verify animations don't impact performance significantly\n11. Test API call performance for adaptive learning data",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-014-25",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.25: Error Handling and Resilience",
    "description": "Verify dashboard handles errors gracefully when data cannot be loaded",
    "scenario": "Dashboard encounters errors loading progress data or API failures",
    "expected_results": "Graceful error handling with fallback displays and user feedback",
    "procedure": "1. Simulate database connection issues\n2. Navigate to dashboard page\n3. Verify appropriate error handling for missing progress data\n4. Test API error handling for adaptive learning endpoints\n5. Check fallback displays for failed data loads\n6. Verify error logging for debugging\n7. Test partial data load scenarios\n8. Check user experience with clear error messaging\n9. Test system recovery when connections are restored",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-26",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.26: Data Security and Privacy",
    "description": "Verify dashboard only displays data for authenticated user with proper security",
    "scenario": "Dashboard shows only current user's data and maintains privacy",
    "expected_results": "User can only view their own progress data with proper security isolation",
    "procedure": "1. Login with User A credentials\n2. Note User A's dashboard data\n3. Logout and login with User B credentials\n4. Verify User B sees only their own data\n5. Check no data leakage between users\n6. Test direct URL manipulation attempts\n7. Verify session security prevents unauthorized access\n8. Check adaptive learning data isolation\n9. Test recommendation privacy",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-014-27",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.27: CSS Asset Loading",
    "description": "Verify dashboard CSS assets load correctly and styling is applied",
    "scenario": "Dashboard loads with proper styling from CSS files",
    "expected_results": "All CSS assets load correctly and dashboard displays with intended styling",
    "procedure": "1. Navigate to dashboard page\n2. Verify dashboard.css loads successfully\n3. Check base styles are applied correctly\n4. Test custom dashboard styling overrides\n5. Verify gradient backgrounds render correctly\n6. Check responsive CSS media queries work\n7. Test CSS Grid and Flexbox layouts\n8. Verify CSS asset caching and performance",
    "test_status": "pending",
    "priority": "low",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-28",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.28: JavaScript Error Handling",
    "description": "Verify JavaScript components handle errors gracefully",
    "scenario": "Dashboard JavaScript encounters errors and provides graceful degradation",
    "expected_results": "JavaScript errors don't break dashboard functionality",
    "procedure": "1. Navigate to dashboard page\n2. Open browser developer tools Console tab\n3. Verify no JavaScript errors on page load\n4. Test adaptive learning API error scenarios\n5. Check error handling for failed AJAX requests\n6. Verify dashboard functions without JavaScript if needed\n7. Test progress bar animation error handling\n8. Check recommendation interaction error handling\n9. Verify graceful degradation for all features",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-29",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.29: Accessibility Compliance",
    "description": "Verify dashboard meets accessibility standards (WCAG)",
    "scenario": "User with disabilities accesses dashboard using assistive technologies",
    "expected_results": "Dashboard is fully accessible with proper labels, ARIA attributes, and keyboard navigation",
    "procedure": "1. Navigate to dashboard page\n2. Test keyboard navigation through all interactive elements\n3. Verify tab order is logical\n4. Check all buttons and links have proper labels\n5. Test dashboard with screen reader software\n6. Verify focus indicators are visible and clear\n7. Check color contrast ratios meet WCAG AA standards\n8. Test progress bars are accessible to screen readers\n9. Verify section headings provide proper structure\n10. Check ARIA landmarks and roles are properly used\n11. Test recommendation interactions are keyboard accessible",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-014-30",
    "module_name": "User-Dashboard-Page",
    "screen_design_ref": "Figure 14.30: Security Audit and Compliance",
    "description": "Verify dashboard system meets security best practices and compliance requirements",
    "scenario": "Security audit of dashboard functionality and data handling",
    "expected_results": "Dashboard follows security best practices and prevents common vulnerabilities",
    "procedure": "1. Audit authentication requirements for dashboard access\n2. Verify user data isolation and privacy\n3. Check protection against data enumeration\n4. Test for injection vulnerabilities in progress display\n5. Verify proper API authentication for adaptive learning endpoints\n6. Check session management security\n7. Test for information disclosure vulnerabilities\n8. Verify proper error handling doesn't leak information\n9. Check logging for security events\n10. Verify compliance with security frameworks (OWASP)\n11. Test dashboard against common attack vectors\n12. Verify secure communication (HTTPS enforcement)\n13. Check adaptive learning API security\n14. Verify data encryption and storage security",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  }
]