[
  {
    "test_plan_no": "STP-009-01",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.1: Password Recovery Page Layout",
    "description": "Verify that the Password Recovery page loads correctly when accessing the /password/forgot URL",
    "scenario": "User navigates to the forgot password page to recover their account access",
    "expected_results": "Display the complete password recovery page with cybersecurity-themed design and email input form",
    "procedure": "1. Open web browser\n2. Navigate to http://localhost:5000/password/forgot\n3. Verify page loads completely\n4. Check page title displays 'Forgot Password'\n5. Verify password recovery form is visible and properly styled\n6. Check cybersecurity-themed design elements are present",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-02",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.2: Password Recovery Header Design",
    "description": "Verify the password recovery header displays correctly with orange-red gradient theme",
    "scenario": "User views the password recovery header with security-focused styling",
    "expected_results": "Display 'Password Recovery' title with key icon and orange-red gradient design",
    "procedure": "1. Navigate to /password/forgot page\n2. Verify gradient background from blue to purple (from-blue-50 via-indigo-100 to-purple-100)\n3. Check key icon (bi-key) is displayed in orange-red gradient circle\n4. Verify 'Password Recovery' title with gradient text effect\n5. Check subtitle 'Enter your email to reset your password'\n6. Verify animated background elements are present\n7. Test dark mode compatibility with gradient adjustments",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-03",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.3: Email Input Field",
    "description": "Verify email input field displays correctly with proper validation and styling",
    "scenario": "User enters email address to request password recovery",
    "expected_results": "Display properly styled email field with envelope icon, validation, and user guidance",
    "procedure": "1. Navigate to /password/forgot page\n2. Verify 'Email Address' field with envelope-at icon (bi-envelope-at)\n3. Check blue color scheme for email field (text-blue-600 dark:text-blue-400)\n4. Test focus effects (focus:ring-2 focus:ring-blue-500)\n5. Verify placeholder text 'Enter your email address'\n6. Check help text 'We'll send you a secure link to reset your password'\n7. Test field styling in dark mode\n8. Verify HTML5 email input type validation",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-04",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.4: hCaptcha Integration",
    "description": "Verify hCaptcha displays and functions correctly for security verification",
    "scenario": "User completes hCaptcha verification before submitting password recovery request",
    "expected_results": "Display hCaptcha widget with security verification label when hCaptcha is enabled",
    "procedure": "1. Navigate to /password/forgot page with hCaptcha enabled\n2. Verify 'Security Verification' label with robot icon (bi-robot)\n3. Check hCaptcha widget is displayed and centered\n4. Test hCaptcha functionality by completing verification\n5. Verify hCaptcha integration with form submission\n6. Test page behavior when hCaptcha is disabled\n7. Check hCaptcha styling consistency with page theme",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-05",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.5: Send Reset Link Button",
    "description": "Verify send reset link button displays correctly with loading states",
    "scenario": "User submits password recovery request and observes button behavior",
    "expected_results": "Display dynamic button with proper styling for normal and loading states",
    "procedure": "1. Navigate to /password/forgot page\n2. Verify normal state shows 'Send Reset Link' with envelope icon\n3. Check orange-red gradient styling (from-orange-500 to-red-600)\n4. Test hover effects (hover:from-orange-600 hover:to-red-700, hover:scale-105)\n5. Verify focus ring styling (focus:ring-4 focus:ring-orange-500/25)\n6. Test loading state animation (spinner and 'Sending...' text)\n7. Check button accessibility and keyboard interaction\n8. Verify button styling in dark mode",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-06",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.6: Back to Login Link",
    "description": "Verify back to login link displays and functions correctly",
    "scenario": "User decides to return to login page instead of resetting password",
    "expected_results": "Display 'Back to Login' link that navigates to login page with proper styling",
    "procedure": "1. Navigate to /password/forgot page\n2. Scroll to bottom of form\n3. Verify 'Remember your password?' text is displayed\n4. Check 'Back to Login' link with blue styling and arrow icon\n5. Click link and verify navigation to login page\n6. Test link hover effects and accessibility\n7. Verify link styling in dark mode",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-07",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.7: Successful Password Recovery Request",
    "description": "Verify successful password recovery request with valid email address",
    "scenario": "User submits valid email address and receives password recovery email",
    "expected_results": "Display success message and send password reset email to valid email address",
    "procedure": "1. Navigate to /password/forgot page\n2. Enter valid registered email address\n3. Complete hCaptcha if enabled\n4. Click 'Send Reset Link' button\n5. Verify success message 'If an account with that email exists, we've sent password reset instructions.'\n6. Check email is sent to user's email address\n7. Verify password reset token is created in database\n8. Check email contains proper reset link and styling\n9. Verify redirect to login page after submission",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-08",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.8: Email Security Handling",
    "description": "Verify security handling for non-existent email addresses",
    "scenario": "User enters email address that doesn't exist in the system",
    "expected_results": "Display same success message without revealing email existence for security",
    "procedure": "1. Navigate to /password/forgot page\n2. Enter non-existent email address\n3. Complete hCaptcha if enabled\n4. Click 'Send Reset Link' button\n5. Verify same success message is displayed\n6. Check no email is actually sent\n7. Verify no sensitive information is leaked\n8. Check no database errors occur\n9. Confirm user cannot determine if email exists",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-09",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.9: Email Format Validation",
    "description": "Verify email format validation and error handling",
    "scenario": "User enters invalid email formats and receives appropriate validation",
    "expected_results": "Proper email validation with format checking and error messages",
    "procedure": "1. Navigate to /password/forgot page\n2. Leave email field empty and submit form\n3. Verify error message 'Please provide your email address.'\n4. Enter invalid email format (missing @) and test\n5. Enter email with invalid domain format\n6. Test various malformed email addresses\n7. Verify HTML5 email validation works\n8. Check server-side validation matches client-side",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-10",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.10: hCaptcha Validation",
    "description": "Verify hCaptcha validation prevents automated attacks",
    "scenario": "User attempts to submit form without completing hCaptcha verification",
    "expected_results": "Form submission blocked until hCaptcha is completed successfully",
    "procedure": "1. Navigate to /password/forgot page with hCaptcha enabled\n2. Enter valid email address\n3. Submit form without completing hCaptcha\n4. Verify error message 'Please complete the captcha verification.'\n5. Complete hCaptcha verification\n6. Submit form and verify successful processing\n7. Test hCaptcha timeout and re-verification\n8. Check hCaptcha integration prevents bot attacks",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-11",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.11: Database Disabled Handling",
    "description": "Verify proper handling when database is disabled (Vercel environment)",
    "scenario": "User attempts password recovery in deployment environment with disabled database",
    "expected_results": "Display warning message about password reset unavailability",
    "procedure": "1. Set DISABLE_DATABASE config to True\n2. Navigate to /password/forgot page\n3. Enter email address and submit form\n4. Verify warning message 'Password reset is not available in this deployment environment.'\n5. Check form remains accessible but reset is blocked\n6. Verify no database operations are attempted\n7. Test user experience with clear messaging",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-12",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.12: Already Logged In Redirect",
    "description": "Verify redirect behavior when user is already authenticated",
    "scenario": "Logged-in user tries to access password recovery page",
    "expected_results": "Automatic redirect to home page for authenticated users",
    "procedure": "1. Login with existing account\n2. Navigate to /password/forgot page while logged in\n3. Verify automatic redirect to home page\n4. Check redirect preserves any query parameters\n5. Test redirect security (no open redirects)\n6. Verify user experience is seamless\n7. Check no password recovery form is displayed to logged-in users",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-13",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.13: Email Template and Styling",
    "description": "Verify password reset email contains proper template, styling, and content",
    "scenario": "User receives password reset email with professional design and security information",
    "expected_results": "Email displays with cybersecurity theme, reset link, and security notices",
    "procedure": "1. Submit valid password recovery request\n2. Check email is received in user's inbox\n3. Verify email subject 'Password Reset Request - CyberQuest'\n4. Check HTML email template with gradient header\n5. Verify reset URL is properly formatted and secure\n6. Check security notice about 1-hour expiration\n7. Test both HTML and plain text versions\n8. Verify email styling works across email clients",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-14",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.14: Reset Token Generation",
    "description": "Verify password reset token generation and security properties",
    "scenario": "System generates secure password reset token for valid requests",
    "expected_results": "Generate cryptographically secure token with proper expiration",
    "procedure": "1. Submit password recovery request\n2. Verify PasswordResetToken is created in database\n3. Check token is cryptographically random and secure\n4. Verify token expiration is set (1 hour)\n5. Check token is associated with correct user\n6. Test token uniqueness across multiple requests\n7. Verify old tokens are invalidated when new ones are created\n8. Check token cleanup for expired entries",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-15",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.15: Email Service Error Handling",
    "description": "Verify proper error handling when email service fails",
    "scenario": "Email service is unavailable or misconfigured during password recovery",
    "expected_results": "Graceful error handling without exposing system details to user",
    "procedure": "1. Configure invalid email server settings\n2. Submit password recovery request\n3. Verify user still sees success message for security\n4. Check error is logged properly for debugging\n5. Test with missing MAIL_SERVER configuration\n6. Verify no sensitive information is exposed\n7. Check system continues to function despite email failure\n8. Test email service recovery scenarios",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-16",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.16: User Account Status Validation",
    "description": "Verify password recovery handling for different account statuses",
    "scenario": "Users with different account statuses request password recovery",
    "expected_results": "Only active accounts receive password reset emails",
    "procedure": "1. Test password recovery with active account (should work)\n2. Test with inactive account (should not send email)\n3. Test with suspended account status\n4. Verify same success message for all cases\n5. Check only active accounts receive reset emails\n6. Test account status verification logic\n7. Verify security implications of account status\n8. Check proper logging for different account states",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-17",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.17: CSRF Protection",
    "description": "Verify CSRF token integration and protection",
    "scenario": "User submits password recovery form with CSRF protection enabled",
    "expected_results": "CSRF token is properly included and validated with form submission",
    "procedure": "1. Navigate to /password/forgot page\n2. View page source and verify csrf_token hidden field\n3. Submit form with valid email\n4. Verify CSRF token is included in POST request\n5. Test form submission without CSRF token (should fail)\n6. Check CSRF token validation in Flask-WTF\n7. Verify security against CSRF attacks\n8. Test CSRF token refresh on page reload",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-18",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.18: Form Animation Sequence",
    "description": "Verify password recovery form elements animate correctly",
    "scenario": "User observes form appearance animations on page load",
    "expected_results": "Form elements appear in staggered sequence with fade-in-up animations",
    "procedure": "1. Navigate to /password/forgot page (clear cache first)\n2. Observe form animation sequence on page load\n3. Verify form container animates first (opacity-0 animate-fade-in-up)\n4. Check email field animates with 0.3s delay\n5. Verify hCaptcha section animates with 0.4s delay\n6. Check button animates with 0.5s delay\n7. Verify back to login link animates with 0.6s delay\n8. Test animation performance and smoothness",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-19",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.19: Dark Mode Compatibility",
    "description": "Verify password recovery page displays correctly in dark mode",
    "scenario": "User toggles dark mode and uses password recovery page",
    "expected_results": "All elements display properly with dark theme colors and proper contrast",
    "procedure": "1. Navigate to /password/forgot page\n2. Toggle dark mode using theme switcher\n3. Verify background gradient changes to dark theme\n4. Check form background uses dark theme (dark:bg-gray-800/90)\n5. Verify text colors invert properly (dark:text-white)\n6. Test input field styling in dark mode\n7. Check button gradients and hover effects\n8. Verify hCaptcha integration works in dark theme\n9. Test accessibility and contrast ratios",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-20",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.20: Responsive Design",
    "description": "Verify password recovery page is responsive across different screen sizes",
    "scenario": "User accesses password recovery page on mobile, tablet, and desktop devices",
    "expected_results": "Page adapts properly to different screen sizes while maintaining functionality",
    "procedure": "1. Navigate to /password/forgot page on desktop (1920x1080)\n2. Verify max-width constraint (max-w-md) centers form\n3. Resize browser to tablet size (768px width)\n4. Check form scaling and spacing adjustments\n5. Resize to mobile size (375px width)\n6. Verify form remains usable on small screens\n7. Test touch interactions on mobile\n8. Check button size and touch targets meet accessibility guidelines\n9. Verify animated elements don't interfere on mobile\n10. Test landscape and portrait orientations",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-009-21",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.21: JavaScript Loading and Error Handling",
    "description": "Verify JavaScript components load correctly and handle errors gracefully",
    "scenario": "User accesses password recovery page and JavaScript components initialize",
    "expected_results": "All scripts load without errors and form functions with graceful degradation",
    "procedure": "1. Navigate to /password/forgot page\n2. Open browser developer tools Console tab\n3. Verify no JavaScript errors on page load\n4. Check forgot-password.js module loads correctly\n5. Test form functionality without JavaScript (graceful degradation)\n6. Verify hCaptcha handler script loads when enabled\n7. Check error handling for failed script loads\n8. Test form submission with JavaScript disabled",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-22",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.22: Rate Limiting and Abuse Prevention",
    "description": "Verify protection against password recovery abuse and rate limiting",
    "scenario": "Malicious user attempts to abuse password recovery system",
    "expected_results": "System implements rate limiting and abuse prevention measures",
    "procedure": "1. Submit multiple password recovery requests rapidly\n2. Verify rate limiting prevents abuse\n3. Test IP-based limiting for excessive requests\n4. Check email-based limiting for same address\n5. Verify legitimate users aren't blocked unfairly\n6. Test recovery from rate limit restrictions\n7. Check logging of potential abuse attempts\n8. Verify hCaptcha helps prevent automated abuse",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-009-23",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.23: Reset Link Validation",
    "description": "Verify password reset link generation and validation",
    "scenario": "System generates valid reset links that work correctly",
    "expected_results": "Reset links are properly formatted, secure, and lead to reset page",
    "procedure": "1. Submit password recovery request\n2. Check email contains properly formatted reset link\n3. Click reset link and verify navigation to reset page\n4. Test reset link URL structure and parameters\n5. Verify link contains secure token\n6. Check link expiration handling\n7. Test link security against tampering\n8. Verify external link validation",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-24",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.24: Integration with Password Reset Flow",
    "description": "Verify password recovery integrates correctly with password reset page",
    "scenario": "User completes full password recovery to reset flow",
    "expected_results": "Seamless integration between password recovery request and password reset",
    "procedure": "1. Submit password recovery request\n2. Receive and click reset link in email\n3. Verify navigation to password reset page\n4. Complete password reset with new password\n5. Check token validation and consumption\n6. Verify successful password update\n7. Test login with new password\n8. Check old reset tokens are invalidated",
    "test_status": "pending",
    "priority": "critical",
    "category": "integration"
  },
  {
    "test_plan_no": "STP-009-25",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.25: Database Error Handling",
    "description": "Verify proper handling of database errors during password recovery",
    "scenario": "Database errors occur during password recovery process",
    "expected_results": "Graceful error handling with proper logging and user feedback",
    "procedure": "1. Simulate database connection failure\n2. Submit password recovery request\n3. Verify appropriate error handling\n4. Check error logging for debugging\n5. Test database timeout scenarios\n6. Verify user receives appropriate feedback\n7. Check system recovery from database errors\n8. Test transaction rollback on failures",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-26",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.26: SEO and Metadata",
    "description": "Verify password recovery page has proper SEO elements and security headers",
    "scenario": "Search engines and security scanners analyze password recovery page",
    "expected_results": "Page has proper title, security headers, and prevents indexing",
    "procedure": "1. Navigate to /password/forgot page\n2. View page source and check title tag shows 'Forgot Password'\n3. Verify noindex meta tag (password pages should not be indexed)\n4. Check for proper heading hierarchy\n5. Verify security headers prevent framing/embedding\n6. Test robots.txt handling for password pages\n7. Check canonical URL if applicable\n8. Verify no sensitive information in meta tags",
    "test_status": "pending",
    "priority": "low",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-27",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.27: Accessibility Compliance",
    "description": "Verify password recovery page meets accessibility standards (WCAG)",
    "scenario": "User with disabilities accesses password recovery form using assistive technologies",
    "expected_results": "Form is fully accessible with proper labels, ARIA attributes, and keyboard navigation",
    "procedure": "1. Navigate to /password/forgot page\n2. Test keyboard navigation through all form elements\n3. Verify tab order is logical (email → hCaptcha → button)\n4. Check all form fields have proper labels\n5. Test form with screen reader software\n6. Verify focus indicators are visible and clear\n7. Check color contrast ratios meet WCAG AA standards\n8. Test error messages are announced by screen readers\n9. Verify form validation errors are accessible\n10. Check ARIA landmarks and roles are properly used",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-28",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.28: Performance and Loading",
    "description": "Verify password recovery page loads efficiently with optimal performance",
    "scenario": "User accesses password recovery page and expects fast loading times",
    "expected_results": "Page loads within acceptable time limits with all styling and functionality",
    "procedure": "1. Clear browser cache\n2. Open browser developer tools Performance tab\n3. Navigate to /password/forgot page\n4. Record page load time and performance metrics\n5. Verify total load time is under 2 seconds\n6. Check First Contentful Paint (FCP) is under 1 second\n7. Verify Largest Contentful Paint (LCP) is acceptable\n8. Test page load on slower network connections\n9. Check for render-blocking resources\n10. Verify animations don't impact performance significantly",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-009-29",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.29: Browser Compatibility",
    "description": "Verify password recovery page works correctly across different browsers",
    "scenario": "User accesses password recovery page using different web browsers",
    "expected_results": "Consistent functionality and appearance across major browsers",
    "procedure": "1. Test password recovery page in Chrome (latest version)\n2. Verify all functionality and styling works correctly\n3. Test in Firefox (latest version)\n4. Check form submission and animations\n5. Test in Safari (if available)\n6. Verify gradients and CSS effects work\n7. Test in Edge browser\n8. Check hCaptcha compatibility across browsers\n9. Verify CSS fallbacks work for older browsers\n10. Test mobile browsers (Chrome mobile, Safari mobile)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-009-30",
    "module_name": "Password Recovery Page",
    "screen_design_ref": "Figure 9.30: Security Audit and Compliance",
    "description": "Verify password recovery system meets security best practices and compliance requirements",
    "scenario": "Security audit of password recovery functionality and implementation",
    "expected_results": "System follows security best practices and prevents common vulnerabilities",
    "procedure": "1. Audit password recovery token generation for randomness\n2. Verify token expiration enforcement (1 hour)\n3. Check rate limiting implementation\n4. Test for timing attack vulnerabilities\n5. Verify email enumeration protection\n6. Check CSRF protection implementation\n7. Test for injection vulnerabilities\n8. Verify proper error handling doesn't leak information\n9. Check logging for security events\n10. Verify compliance with security frameworks (OWASP)\n11. Test password recovery against common attack vectors\n12. Verify secure communication (HTTPS enforcement)",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  }
]
