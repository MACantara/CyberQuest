[
  {
    "test_plan_no": "STP-011-01",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.1: Email Verification Pending Page Layout",
    "description": "Verify that the Email Verification Pending page loads correctly after successful user registration",
    "scenario": "User completes registration and is redirected to verification pending page with email sent confirmation",
    "expected_results": "Display the complete verification pending page with success message and email verification instructions",
    "procedure": "1. Open web browser\n2. Navigate to registration page and complete signup\n3. Verify redirect to /auth/verification-pending with proper parameters\n4. Check page title displays 'Email Verification Required'\n5. Verify success message 'Account created successfully!' is shown\n6. Check email address is displayed correctly\n7. Verify verification instructions are visible",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-02",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.2: Verification Pending Page Header Design",
    "description": "Verify the verification pending header displays correctly with success styling",
    "scenario": "User views the verification pending header with cybersecurity-themed design",
    "expected_results": "Display 'Account Created Successfully!' or 'Email Verification Required' with envelope-check icon and proper styling",
    "procedure": "1. Navigate to verification pending page\n2. Verify gradient background (bg-gray-50 dark:bg-gray-900)\n3. Check envelope-check icon (bi-envelope-check) in green circle\n4. Verify animated pulse effect on icon (animate-pulse-slow)\n5. Check title changes based on context (registration vs login attempt)\n6. Verify subtitle text displays appropriately\n7. Test dark mode compatibility with header styling",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-03",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.3: Email Information Display",
    "description": "Verify email address information is displayed correctly in verification pending page",
    "scenario": "User views the verification pending page and sees their email address prominently displayed",
    "expected_results": "Display user's email address in a styled container with envelope icon",
    "procedure": "1. Navigate to verification pending page with user_email parameter\n2. Verify email display container with blue styling (bg-blue-50 dark:bg-blue-900/20)\n3. Check envelope icon (bi-envelope) is present\n4. Verify 'Verification email sent to:' label\n5. Check user email is displayed in bold font\n6. Test email display with various email formats\n7. Verify email container styling in dark mode",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-04",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.4: Next Steps Instructions",
    "description": "Verify the step-by-step verification instructions display correctly",
    "scenario": "User views detailed instructions on how to complete email verification",
    "expected_results": "Display numbered steps with clear instructions for email verification process",
    "procedure": "1. Navigate to verification pending page\n2. Verify 'Next Steps:' heading is displayed\n3. Check step 1: 'Check your email inbox for a verification message'\n4. Verify step 2: 'Click the verification link in the email'\n5. Check step 3: 'Return to the login page and sign in'\n6. Verify numbered circles with green styling\n7. Test instruction visibility and readability",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-05",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.5: Important Notes Section",
    "description": "Verify important notes and warnings display correctly",
    "scenario": "User views important information about email verification requirements",
    "expected_results": "Display yellow-styled warning box with important verification information",
    "procedure": "1. Navigate to verification pending page\n2. Verify yellow warning container (bg-yellow-50 dark:bg-yellow-900/20)\n3. Check exclamation-triangle icon (bi-exclamation-triangle)\n4. Verify 'Important:' heading\n5. Check bullet point about checking spam folder\n6. Verify '24 hours expiration' warning\n7. Check 'cannot log in until verified' notice\n8. Test warning styling in dark mode",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-06",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.6: Resend Verification Email Feature",
    "description": "Verify resend verification email functionality works correctly",
    "scenario": "User clicks resend verification email button and receives new verification email",
    "expected_results": "New verification email is sent and user receives confirmation message",
    "procedure": "1. Navigate to verification pending page\n2. Verify 'Didn't receive the email?' text is displayed\n3. Check resend form with CSRF token and hidden fields\n4. Click 'Resend Verification Email' button\n5. Verify form submission with proper CSRF validation\n6. Check new verification email is sent\n7. Verify success message after resend\n8. Test button loading state during submission",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-07",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.7: Action Buttons Navigation",
    "description": "Verify action buttons for navigation work correctly",
    "scenario": "User uses action buttons to navigate to login or home page",
    "expected_results": "Buttons provide proper navigation with appropriate styling and functionality",
    "procedure": "1. Navigate to verification pending page\n2. Verify 'Go to Login' button with green gradient styling\n3. Check box-arrow-in-right icon is present\n4. Click 'Go to Login' and verify navigation to login page\n5. Return to verification page\n6. Verify 'Return Home' button with gray gradient styling\n7. Check house icon is present\n8. Click 'Return Home' and verify navigation to home page",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-08",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.8: Auto-Verification Check",
    "description": "Verify automatic verification status checking works correctly",
    "scenario": "Page automatically checks if user has verified email and redirects accordingly",
    "expected_results": "Page checks verification status every 30 seconds and redirects when verified",
    "procedure": "1. Navigate to verification pending page\n2. Open browser developer tools Network tab\n3. Wait and observe AJAX requests to check_verification_status endpoint\n4. Verify requests are made every 30 seconds\n5. In another tab, verify email address using verification link\n6. Return to pending page and verify automatic redirect to login\n7. Check success toast message is displayed\n8. Test auto-refresh stops after 10 attempts (5 minutes)",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-09",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.9: Email Verification Token Processing",
    "description": "Verify email verification token processing works correctly",
    "scenario": "User clicks verification link in email and token is processed successfully",
    "expected_results": "Valid token verifies email address and redirects to login with success message",
    "procedure": "1. Register new user account\n2. Check email for verification link\n3. Click verification link from email\n4. Verify navigation to /auth/verify-email/[token] endpoint\n5. Check token validation and processing\n6. Verify success message 'Email address verified successfully!'\n7. Check redirect to login page\n8. Verify email is marked as verified in database",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-10",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.10: Invalid Token Handling",
    "description": "Verify proper handling of invalid or malformed verification tokens",
    "scenario": "User attempts to access verification endpoint with invalid token",
    "expected_results": "Display error message and redirect to login page for invalid tokens",
    "procedure": "1. Navigate to /auth/verify-email/invalid_token_123\n2. Verify error message 'Invalid verification token.'\n3. Check redirect to login page\n4. Test with malformed token characters\n5. Test with empty token parameter\n6. Verify no sensitive information is exposed\n7. Check error logging for debugging purposes\n8. Test token that doesn't exist in database",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-11",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.11: Expired Token Handling",
    "description": "Verify proper handling of expired verification tokens (24 hour limit)",
    "scenario": "User attempts to use verification token after 24 hour expiration period",
    "expected_results": "Display expiration error message and redirect to login page",
    "procedure": "1. Generate verification token and simulate 24+ hour age\n2. Navigate to verification URL with expired token\n3. Verify error message 'Verification token has expired. Please request a new one.'\n4. Check redirect to login page\n5. Test token expiration at exact 24-hour mark\n6. Verify token cleanup removes expired tokens\n7. Check database query efficiency for expiration check\n8. Test user guidance for requesting new verification",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-12",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.12: Already Verified Token Handling",
    "description": "Verify proper handling when verification token has already been used",
    "scenario": "User clicks verification link that has already been used to verify email",
    "expected_results": "Display informational message and redirect to login page",
    "procedure": "1. Complete email verification process successfully\n2. Attempt to use same verification link again\n3. Verify message 'Email address has already been verified. You can now log in.'\n4. Check redirect to login page\n5. Verify token remains marked as verified\n6. Test user experience with clear messaging\n7. Check no duplicate verification processing occurs\n8. Verify database integrity with multiple verification attempts",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-13",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.13: Email Service Integration",
    "description": "Verify email service integration and HTML email template rendering",
    "scenario": "System sends verification email with proper HTML template and content",
    "expected_results": "Email is sent with cybersecurity-themed HTML template and proper verification link",
    "procedure": "1. Register new user account\n2. Check email is received in user's inbox\n3. Verify email subject 'Verify Your Email Address - CyberQuest'\n4. Check HTML email template with blue gradient header\n5. Verify welcome message with username personalization\n6. Check verification button with proper URL\n7. Test fallback link in email\n8. Verify 24-hour expiration notice in email\n9. Check email displays correctly in various email clients",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-14",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.14: Email Service Error Handling",
    "description": "Verify proper error handling when email service fails",
    "scenario": "Email service is unavailable or misconfigured during verification email sending",
    "expected_results": "Graceful error handling with proper logging and user feedback",
    "procedure": "1. Configure invalid email server settings\n2. Attempt to register new user account\n3. Verify user account is created despite email failure\n4. Check appropriate warning message is displayed\n5. Test with missing MAIL_SERVER configuration\n6. Verify error is logged properly for debugging\n7. Check resend functionality works when email service recovers\n8. Test user experience with clear messaging about email issues",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-15",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.15: CSRF Protection",
    "description": "Verify CSRF token integration and protection for resend functionality",
    "scenario": "User submits resend verification form with CSRF protection enabled",
    "expected_results": "CSRF token is properly included and validated with form submission",
    "procedure": "1. Navigate to verification pending page\n2. View page source and verify csrf_token hidden field in resend form\n3. Submit resend form with valid CSRF token\n4. Verify CSRF token is included in POST request\n5. Test form submission without CSRF token (should fail)\n6. Check CSRF validation error handling\n7. Verify security against CSRF attacks\n8. Test CSRF token refresh on page reload",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-16",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.16: Login Attempt Context Handling",
    "description": "Verify proper handling when unverified user attempts to login",
    "scenario": "User with unverified email attempts to login and is redirected to verification page",
    "expected_results": "Display specific message about login being blocked until email verification",
    "procedure": "1. Register user account but don't verify email\n2. Attempt to login with unverified account\n3. Verify redirect to verification pending page with login_attempt=true\n4. Check special info box about 'Login Temporarily Blocked'\n5. Verify warning message about email verification requirement\n6. Check blue info styling (bg-blue-50 dark:bg-blue-900/20)\n7. Test user experience with clear guidance\n8. Verify login is properly blocked until verification",
    "test_status": "pending",
    "priority": "high",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-17",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.17: Verification Status API Endpoint",
    "description": "Verify AJAX verification status checking API endpoint works correctly",
    "scenario": "JavaScript makes AJAX requests to check if user's email has been verified",
    "expected_results": "API endpoint returns proper JSON response with verification status",
    "procedure": "1. Navigate to verification pending page\n2. Use browser developer tools to monitor AJAX requests\n3. Verify POST requests to /auth/check-verification-status\n4. Check request includes user_id and user_email in JSON body\n5. Verify response format {'verified': false/true}\n6. Test with verified user (should return {'verified': true})\n7. Check error handling for invalid requests\n8. Verify proper JSON content-type headers",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-18",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.18: User Account Association",
    "description": "Verify verification tokens are properly associated with correct user accounts",
    "scenario": "Multiple users register and each receives verification for correct account",
    "expected_results": "Verification tokens are unique per user and only verify the associated account",
    "procedure": "1. Register multiple user accounts simultaneously\n2. Check each user receives unique verification token\n3. Verify tokens are associated with correct user IDs in database\n4. Test cross-verification (User A's token doesn't verify User B)\n5. Check email verification status is specific to each user\n6. Verify token security prevents unauthorized verification\n7. Test concurrent verification scenarios\n8. Check database integrity with multiple users",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-19",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.19: Form Animation Sequence",
    "description": "Verify verification pending page elements animate correctly",
    "scenario": "User observes page appearance animations on verification pending page load",
    "expected_results": "Page elements appear in staggered sequence with fade-in animations",
    "procedure": "1. Navigate to verification pending page (clear cache first)\n2. Observe animation sequence on page load\n3. Verify header animates first (animate-fade-in-up)\n4. Check login attempt info box animates with 0.15s delay\n5. Verify main content animates with 0.2s delay (animate-fade-in-left)\n6. Check email info animates with 0.3s delay\n7. Verify instructions animate with 0.4s delay\n8. Check warning box, resend section, and buttons animate in sequence\n9. Test animation performance and smoothness",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-20",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.20: Dark Mode Compatibility",
    "description": "Verify verification pending page displays correctly in dark mode",
    "scenario": "User toggles dark mode and uses verification pending page",
    "expected_results": "All elements display properly with dark theme colors and proper contrast",
    "procedure": "1. Navigate to verification pending page\n2. Toggle dark mode using theme switcher\n3. Verify background changes to dark theme (dark:bg-gray-900)\n4. Check form background uses dark theme (dark:bg-gray-800)\n5. Verify text colors invert properly (dark:text-white)\n6. Test info boxes styling in dark mode\n7. Check button gradients work in dark theme\n8. Verify icon colors adapt to dark mode\n9. Test accessibility and contrast ratios",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-21",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.21: Responsive Design",
    "description": "Verify verification pending page is responsive across different screen sizes",
    "scenario": "User accesses verification pending page on mobile, tablet, and desktop devices",
    "expected_results": "Page adapts properly to different screen sizes while maintaining functionality",
    "procedure": "1. Navigate to verification pending page on desktop (1920x1080)\n2. Verify max-width constraint (max-w-md) centers content\n3. Resize browser to tablet size (768px width)\n4. Check content scaling and spacing adjustments\n5. Resize to mobile size (375px width)\n6. Verify page remains usable on small screens\n7. Test touch interactions on mobile\n8. Check button size and touch targets meet accessibility guidelines\n9. Verify action buttons stack properly on mobile (flex-col sm:flex-row)\n10. Test landscape and portrait orientations",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-22",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.22: Email Template Security",
    "description": "Verify email verification template is secure and prevents attacks",
    "scenario": "Email template handles various inputs securely and prevents injection attacks",
    "expected_results": "Email template properly escapes user input and prevents security vulnerabilities",
    "procedure": "1. Register user with special characters in username and email\n2. Check verification email template properly escapes user input\n3. Test email template with various username formats\n4. Verify no HTML injection is possible in email content\n5. Check verification URL is properly formatted and secure\n6. Test email template with Unicode characters\n7. Verify no sensitive information is exposed in email\n8. Check email headers for security best practices",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-23",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.23: Token Generation Security",
    "description": "Verify verification token generation is cryptographically secure",
    "scenario": "System generates secure verification tokens that cannot be predicted or forged",
    "expected_results": "Tokens are cryptographically random, unique, and cannot be guessed",
    "procedure": "1. Register multiple users and collect verification tokens\n2. Analyze token randomness and uniqueness\n3. Verify tokens cannot be predicted or sequenced\n4. Check token length provides sufficient entropy\n5. Test token generation under load\n6. Verify tokens are not reused across users\n7. Check token storage security in database\n8. Test token validation is secure against timing attacks",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-011-24",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.24: Database Error Handling",
    "description": "Verify proper handling of database errors during verification process",
    "scenario": "Database errors occur during verification creation or validation",
    "expected_results": "Graceful error handling with proper logging and user feedback",
    "procedure": "1. Simulate database connection failure during verification creation\n2. Attempt to register new user account\n3. Verify appropriate error handling\n4. Check error logging for debugging\n5. Test database timeout scenarios\n6. Verify user receives appropriate feedback\n7. Check system recovery from database errors\n8. Test transaction rollback on failures",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-25",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.25: Performance and Loading",
    "description": "Verify verification pending page loads efficiently with optimal performance",
    "scenario": "User accesses verification pending page and expects fast loading times",
    "expected_results": "Page loads within acceptable time limits with all styling and functionality",
    "procedure": "1. Clear browser cache\n2. Open browser developer tools Performance tab\n3. Navigate to verification pending page\n4. Record page load time and performance metrics\n5. Verify total load time is under 2 seconds\n6. Check First Contentful Paint (FCP) is under 1 second\n7. Verify Largest Contentful Paint (LCP) is acceptable\n8. Test page load on slower network connections\n9. Check for render-blocking resources\n10. Verify animations don't impact performance significantly",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-011-26",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.26: Accessibility Compliance",
    "description": "Verify verification pending page meets accessibility standards (WCAG)",
    "scenario": "User with disabilities accesses verification pending page using assistive technologies",
    "expected_results": "Page is fully accessible with proper labels, ARIA attributes, and keyboard navigation",
    "procedure": "1. Navigate to verification pending page\n2. Test keyboard navigation through all interactive elements\n3. Verify tab order is logical (resend button → action buttons)\n4. Check all buttons have proper labels\n5. Test page with screen reader software\n6. Verify focus indicators are visible and clear\n7. Check color contrast ratios meet WCAG AA standards\n8. Test flash messages are announced by screen readers\n9. Verify icons have appropriate alt text or ARIA labels\n10. Check ARIA landmarks and roles are properly used",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-27",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.27: Multiple Verification Requests",
    "description": "Verify handling of multiple verification requests for same user",
    "scenario": "User requests multiple verification emails and system handles appropriately",
    "expected_results": "System manages multiple verification requests efficiently without conflicts",
    "procedure": "1. Register user account and receive initial verification email\n2. Request resend verification multiple times\n3. Verify each request generates new token\n4. Check old tokens remain valid until expired\n5. Test verification with newest token\n6. Verify all tokens for user are invalidated after successful verification\n7. Check database cleanup of old tokens\n8. Test rate limiting for verification requests",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-28",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.28: Error Message Display",
    "description": "Verify error messages display correctly with proper styling and clarity",
    "scenario": "User encounters various errors and receives clear feedback",
    "expected_results": "Error messages are displayed prominently with clear, helpful text",
    "procedure": "1. Navigate to verification page and trigger various errors\n2. Verify error messages use consistent styling (flash messages)\n3. Check error messages are clearly visible\n4. Test different error scenarios (invalid token, expired, CSRF failure)\n5. Verify error messages don't expose sensitive information\n6. Check error message accessibility for screen readers\n7. Test error message dismissal functionality\n8. Verify error styling in both light and dark modes",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-011-29",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.29: Browser Compatibility",
    "description": "Verify verification system works correctly across different browsers",
    "scenario": "User accesses verification features using different web browsers",
    "expected_results": "Consistent functionality and appearance across major browsers",
    "procedure": "1. Test verification pending page in Chrome (latest version)\n2. Verify all functionality and styling works correctly\n3. Test in Firefox (latest version)\n4. Check AJAX verification status checking\n5. Test in Safari (if available)\n6. Verify animations and CSS effects work\n7. Test in Edge browser\n8. Check auto-refresh functionality across browsers\n9. Verify email link handling in different browsers\n10. Test mobile browsers (Chrome mobile, Safari mobile)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-011-30",
    "module_name": "Email Verification System",
    "screen_design_ref": "Figure 11.30: Security Audit and Compliance",
    "description": "Verify email verification system meets security best practices and compliance requirements",
    "scenario": "Security audit of email verification functionality and implementation",
    "expected_results": "System follows security best practices and prevents common vulnerabilities",
    "procedure": "1. Audit verification token generation for cryptographic security\n2. Verify token expiration enforcement (24 hours)\n3. Check protection against token enumeration attacks\n4. Test for timing attack vulnerabilities\n5. Verify proper email validation and sanitization\n6. Check CSRF protection implementation\n7. Test for session fixation vulnerabilities\n8. Verify proper error handling doesn't leak information\n9. Check logging for security events\n10. Verify compliance with security frameworks (OWASP)\n11. Test email verification against common attack vectors\n12. Verify secure communication (HTTPS enforcement)\n13. Check integration security with email service",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  }
]
