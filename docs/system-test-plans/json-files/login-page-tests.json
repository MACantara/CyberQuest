[
  {
    "test_plan_no": "STP-007-01",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.1: Login Page Layout",
    "description": "Verify that the Login page loads correctly when accessing the /auth/login URL",
    "scenario": "User navigates to the login page to access the agent portal",
    "expected_results": "Display the complete login page with cybersecurity-themed design, form fields, and security elements",
    "procedure": "1. Open web browser\n2. Navigate to http://localhost:5000/auth/login\n3. Verify page loads completely\n4. Check page title displays 'Agent Portal Access'\n5. Verify all login form elements are visible and properly styled",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-02",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.2: Agent Portal Header Design",
    "description": "Verify the agent portal header displays correctly with cybersecurity theme",
    "scenario": "User views the login page header with gradient background and security styling",
    "expected_results": "Display 'Agent Portal Access' title with shield-lock icon and cybersecurity-themed gradient design",
    "procedure": "1. Navigate to /auth/login page\n2. Verify gradient background from blue to purple (from-blue-50 via-indigo-100 to-purple-100)\n3. Check shield-lock icon (bi-shield-lock) is displayed in blue-cyan gradient circle\n4. Verify 'Agent Portal Access' title with gradient text effect\n5. Check subtitle 'Enter your credentials to continue mission'\n6. Verify animated background elements are present\n7. Test dark mode compatibility with gradient adjustments",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-03",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.3: Form Input Fields",
    "description": "Verify login form input fields display correctly with cybersecurity styling",
    "scenario": "User views and interacts with username/email and password input fields",
    "expected_results": "Display properly styled input fields with agent-themed labels, focus effects, and validation",
    "procedure": "1. Navigate to /auth/login page\n2. Verify 'Agent Username or Email' field with person-badge icon\n3. Check blue color scheme for username field (text-blue-600 dark:text-blue-400)\n4. Verify 'Agent Password' field with key icon\n5. Check purple color scheme for password field (text-purple-600 dark:text-purple-400)\n6. Test focus effects (focus:ring-2 focus:ring-blue-500 and focus:ring-purple-500)\n7. Verify placeholder text and hover effects\n8. Test field styling in dark mode",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-04",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.4: Remember Me and Forgot Password",
    "description": "Verify remember me checkbox and forgot password link functionality",
    "scenario": "User interacts with remember me option and forgot password link",
    "expected_results": "Display functional remember me checkbox with 'Remember this terminal' label and working forgot password link",
    "procedure": "1. Navigate to /auth/login page\n2. Verify 'Remember this terminal' checkbox is present\n3. Check checkbox styling and functionality\n4. Click checkbox to test toggle behavior\n5. Verify 'Forgot password?' link is displayed\n6. Check link points to password reset route\n7. Test link hover effects and accessibility\n8. Verify cybersecurity-themed language ('terminal' instead of 'device')",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-05",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.5: hCaptcha Integration",
    "description": "Verify hCaptcha displays and functions correctly when enabled",
    "scenario": "User encounters hCaptcha verification during login process",
    "expected_results": "Display hCaptcha widget with security verification label when hCaptcha is enabled",
    "procedure": "1. Navigate to /auth/login page with hCaptcha enabled\n2. Verify 'Security Verification' label with robot icon (bi-robot)\n3. Check hCaptcha widget is displayed and centered\n4. Test hCaptcha functionality by completing verification\n5. Verify hCaptcha integration with form submission\n6. Test page behavior when hCaptcha is disabled\n7. Check hCaptcha styling consistency with page theme",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-06",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.6: Login Button States",
    "description": "Verify login button displays correctly in different states (normal, loading, locked)",
    "scenario": "User observes login button behavior during various interaction states",
    "expected_results": "Display dynamic login button with proper styling for normal, loading, and locked states",
    "procedure": "1. Navigate to /auth/login page\n2. Verify normal state shows 'Access Portal' with shield-check icon\n3. Check gradient styling (from-blue-500 to-cyan-600)\n4. Test hover effects (hover:from-blue-600 hover:to-cyan-700, hover:scale-105)\n5. Verify focus ring styling (focus:ring-4 focus:ring-blue-500/25)\n6. Test loading state animation (spinner and 'Authenticating...' text)\n7. Check locked state appearance when IP is locked out\n8. Verify disabled state styling and pointer events",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-07",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.7: Create Account Link",
    "description": "Verify create account link displays and functions correctly",
    "scenario": "New user needs to navigate to signup page from login page",
    "expected_results": "Display 'Create Account' link that navigates to signup page with proper styling",
    "procedure": "1. Navigate to /auth/login page\n2. Scroll to bottom of form\n3. Verify 'Don't have an account?' text is displayed\n4. Check 'Create Account' link with green styling (text-green-600 dark:text-green-400)\n5. Click link and verify navigation to signup page\n6. Test link hover effects and accessibility\n7. Verify link styling in dark mode",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-08",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.8: Successful Login Flow",
    "description": "Verify successful login process with valid credentials",
    "scenario": "Registered user logs in with correct username/email and password",
    "expected_results": "Successful authentication, session creation, and redirect to home page with success message",
    "procedure": "1. Navigate to /auth/login page\n2. Enter valid username or email\n3. Enter correct password\n4. Complete hCaptcha if enabled\n5. Click 'Access Portal' button\n6. Verify successful login with 'Welcome back, [username]!' message\n7. Check redirect to home page or next parameter\n8. Verify user session is created\n9. Check remember me functionality if selected\n10. Verify last login timestamp is updated",
    "test_status": "pending",
    "priority": "critical",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-09",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.9: Invalid Credentials Handling",
    "description": "Verify proper error handling for invalid login credentials",
    "scenario": "User attempts login with incorrect username/email or password",
    "expected_results": "Display error message with remaining attempts counter and record failed login attempt",
    "procedure": "1. Navigate to /auth/login page\n2. Enter invalid username or email\n3. Enter any password\n4. Click 'Access Portal' button\n5. Verify error message 'Invalid username/email or password'\n6. Check remaining attempts counter is displayed\n7. Verify failed attempt is recorded in database\n8. Test with valid username but wrong password\n9. Check error message consistency\n10. Verify no sensitive information is leaked in error messages",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-10",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.10: Email Verification Check",
    "description": "Verify email verification status check before password validation",
    "scenario": "User with unverified email attempts to login with correct credentials",
    "expected_results": "Redirect to verification pending page without recording failed login attempt",
    "procedure": "1. Create user account without email verification\n2. Navigate to /auth/login page\n3. Enter correct username and password for unverified user\n4. Click 'Access Portal' button\n5. Verify redirect to verification pending page\n6. Check login_attempt parameter is passed\n7. Verify no failed login attempt is recorded\n8. Check user cannot access authenticated areas\n9. Test resend verification functionality",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-11",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.11: IP Lockout Protection",
    "description": "Verify IP lockout functionality after multiple failed login attempts",
    "scenario": "Malicious user makes multiple failed login attempts triggering IP lockout",
    "expected_results": "Display lockout warning and disable form after exceeding attempt limit",
    "procedure": "1. Navigate to /auth/login page\n2. Make multiple failed login attempts (exceed configured limit)\n3. Verify lockout warning appears with red styling\n4. Check 'Security Protocol Activated' message is displayed\n5. Verify shield-x icon and security-themed language\n6. Check minutes remaining counter is displayed\n7. Verify login form is disabled (pointer-events: none, opacity: 0.6)\n8. Test form remains disabled until lockout expires\n9. Verify lockout applies to IP address, not just user account",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-12",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.12: Session Expiry Handling",
    "description": "Verify session expiry message display from auth state validator",
    "scenario": "User with expired session is redirected to login page with expiry message",
    "expected_results": "Display session expiry warning message from URL parameters",
    "procedure": "1. Login and wait for session to expire\n2. Try to access protected page\n3. Verify redirect to login page with auth_expired parameter\n4. Check session expiry message is displayed\n5. Verify 'Your session has expired. Please log in again to continue.' text\n6. Test URL-encoded flash message decoding\n7. Check message only displays on GET requests\n8. Verify message styling and visibility",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-13",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.13: Database Disabled Handling",
    "description": "Verify proper handling when database is disabled (Vercel environment)",
    "scenario": "User attempts login in deployment environment with disabled database",
    "expected_results": "Display warning message about authentication unavailability",
    "procedure": "1. Set DISABLE_DATABASE config to True\n2. Navigate to /auth/login page\n3. Enter any credentials\n4. Click 'Access Portal' button\n5. Verify warning message 'Authentication is not available in this deployment environment.'\n6. Check form remains accessible but login is blocked\n7. Verify no database operations are attempted\n8. Test user experience with clear messaging",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-14",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.14: CSRF Protection",
    "description": "Verify CSRF token integration and protection",
    "scenario": "User submits login form with CSRF protection enabled",
    "expected_results": "CSRF token is properly included and validated with form submission",
    "procedure": "1. Navigate to /auth/login page\n2. View page source and verify csrf_token hidden field\n3. Submit form with valid credentials\n4. Verify CSRF token is included in POST request\n5. Test form submission without CSRF token (should fail)\n6. Check CSRF token validation in Flask-WTF\n7. Verify security against CSRF attacks",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-15",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.15: Input Validation",
    "description": "Verify client-side and server-side input validation",
    "scenario": "User submits login form with various input combinations",
    "expected_results": "Proper validation of required fields and input formats",
    "procedure": "1. Navigate to /auth/login page\n2. Try submitting form with empty username/email field\n3. Verify 'Please provide both username/email and password.' error\n4. Try submitting with empty password field\n5. Check same validation error\n6. Test with whitespace-only inputs\n7. Verify input trimming and lowercase conversion\n8. Check HTML5 required attributes\n9. Test form validation accessibility",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-16",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.16: Already Logged In Redirect",
    "description": "Verify redirect behavior when user is already authenticated",
    "scenario": "Logged-in user tries to access login page",
    "expected_results": "Automatic redirect to home page or next parameter destination",
    "procedure": "1. Login with valid credentials\n2. Navigate to /auth/login page while logged in\n3. Verify automatic redirect to home page\n4. Test with next parameter: /auth/login?next=/profile\n5. Verify redirect to specified next page\n6. Check redirect preserves query parameters\n7. Test redirect security (no open redirects)\n8. Verify user experience is seamless",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-17",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.17: Animated Background Elements",
    "description": "Verify animated background elements display correctly",
    "scenario": "User views login page with animated cybersecurity-themed background",
    "expected_results": "Display bouncing and pulsing geometric elements with proper animations",
    "procedure": "1. Navigate to /auth/login page\n2. Verify blue bouncing circle (top-left, animation-duration: 4s)\n3. Check green bouncing circle (bottom-right, delay: 2s, duration: 5s)\n4. Verify purple pulsing circle (top-right area)\n5. Test animations are smooth and not distracting\n6. Check elements are marked with aria-hidden='true'\n7. Verify animations work in dark mode\n8. Test performance impact of animations",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-18",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.18: Dark Mode Compatibility",
    "description": "Verify login page displays correctly in dark mode",
    "scenario": "User toggles dark mode and uses login page",
    "expected_results": "All elements display properly with dark theme colors and proper contrast",
    "procedure": "1. Navigate to /auth/login page\n2. Toggle dark mode using theme switcher\n3. Verify background gradient changes (dark:from-gray-900 dark:via-blue-900 dark:to-purple-900)\n4. Check form background uses dark theme (dark:bg-gray-800/90)\n5. Verify text colors invert properly (dark:text-white)\n6. Test input field styling in dark mode\n7. Check button gradients and hover effects\n8. Verify all warning/error boxes work in dark theme\n9. Test accessibility and contrast ratios",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-19",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.19: Responsive Design",
    "description": "Verify login page is responsive across different screen sizes",
    "scenario": "User accesses login page on mobile, tablet, and desktop devices",
    "expected_results": "Page adapts properly to different screen sizes while maintaining functionality",
    "procedure": "1. Navigate to /auth/login page on desktop (1920x1080)\n2. Verify max-width constraint (max-w-md) centers form\n3. Resize browser to tablet size (768px width)\n4. Check form scaling and spacing adjustments\n5. Resize to mobile size (375px width)\n6. Verify form remains usable on small screens\n7. Test touch interactions on mobile\n8. Check button size and touch targets meet accessibility guidelines\n9. Verify animated elements don't interfere on mobile\n10. Test landscape and portrait orientations",
    "test_status": "pending",
    "priority": "high",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-20",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.20: Form Animation Sequence",
    "description": "Verify login form elements animate in proper sequence",
    "scenario": "User observes form appearance animations on page load",
    "expected_results": "Form elements appear in staggered sequence with fade-in-up animations",
    "procedure": "1. Navigate to /auth/login page (clear cache first)\n2. Observe form animation sequence on page load\n3. Verify form container animates first (opacity-0 animate-fade-in-up)\n4. Check username field animates with 0.3s delay\n5. Verify password field animates with 0.4s delay\n6. Check remember me section animates with 0.5s delay\n7. Verify hCaptcha section animates with 0.55s delay\n8. Check button animates with 0.6s delay\n9. Verify create account link animates with 0.7s delay\n10. Test animation performance and smoothness",
    "test_status": "pending",
    "priority": "low",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-21",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.21: User Account Status Validation",
    "description": "Verify login behavior with different user account statuses",
    "scenario": "Users with different account statuses attempt to login",
    "expected_results": "Proper handling of active, inactive, and non-existent accounts",
    "procedure": "1. Create test accounts with different statuses\n2. Test login with active account (should succeed)\n3. Test login with inactive account (should fail)\n4. Test login with non-existent account (should fail)\n5. Verify appropriate error messages for each status\n6. Check that inactive accounts cannot login even with correct password\n7. Verify failed attempts are recorded appropriately\n8. Test that only active verified accounts can login",
    "test_status": "pending",
    "priority": "high",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-22",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.22: Username and Email Login",
    "description": "Verify login functionality works with both username and email",
    "scenario": "User logs in using either username or email address",
    "expected_results": "Successful authentication using either username or email with same password",
    "procedure": "1. Create test account with known username and email\n2. Navigate to /auth/login page\n3. Login using username and verify success\n4. Logout and login using email address\n5. Verify both methods work with same password\n6. Test case sensitivity (usernames/emails converted to lowercase)\n7. Check database lookup functions for both identifiers\n8. Verify security and no information leakage",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-23",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.23: Password Security Handling",
    "description": "Verify password handling and security measures",
    "scenario": "User enters password and system handles it securely",
    "expected_results": "Password is securely transmitted, hashed, and validated without exposure",
    "procedure": "1. Navigate to /auth/login page\n2. Enter password in password field\n3. Verify password is masked in browser (type='password')\n4. Check password is not visible in browser developer tools\n5. Submit form and verify password is sent over HTTPS in production\n6. Check password is hashed before database comparison\n7. Verify no password logging or exposure\n8. Test password validation uses secure comparison methods",
    "test_status": "pending",
    "priority": "critical",
    "category": "security"
  },
  {
    "test_plan_no": "STP-007-24",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.24: JavaScript and CSS Loading",
    "description": "Verify proper loading of JavaScript and CSS resources",
    "scenario": "User accesses login page and all resources load correctly",
    "expected_results": "All stylesheets, scripts, and resources load without errors",
    "procedure": "1. Navigate to /auth/login page\n2. Open browser developer tools Network tab\n3. Reload page and check all resources load (200 status)\n4. Verify auth.css stylesheet loads correctly\n5. Check hCaptcha handler script loads when hCaptcha is enabled\n6. Verify no JavaScript errors in console\n7. Test page functionality without JavaScript (graceful degradation)\n8. Check CSS animations and transitions work properly",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-25",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.25: SEO and Metadata",
    "description": "Verify login page has proper SEO elements and metadata",
    "scenario": "Search engines and social media platforms index login page appropriately",
    "expected_results": "Page has proper title, meta tags, and security headers",
    "procedure": "1. Navigate to /auth/login page\n2. View page source and check title tag shows 'Agent Portal Access'\n3. Verify meta description if present\n4. Check for noindex meta tag (login pages should not be indexed)\n5. Verify proper heading hierarchy (h1 for main title)\n6. Check canonical URL if applicable\n7. Test robots.txt handling for auth pages\n8. Verify security headers prevent framing/embedding",
    "test_status": "pending",
    "priority": "low",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-26",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.26: Form Accessibility",
    "description": "Verify login form meets accessibility standards (WCAG)",
    "scenario": "User with disabilities accesses login form using assistive technologies",
    "expected_results": "Form is fully accessible with proper labels, ARIA attributes, and keyboard navigation",
    "procedure": "1. Navigate to /auth/login page\n2. Test keyboard navigation through all form elements\n3. Verify tab order is logical (username → password → remember me → button)\n4. Check all form fields have proper labels\n5. Test form with screen reader software\n6. Verify focus indicators are visible and clear\n7. Check color contrast ratios meet WCAG AA standards\n8. Test error messages are announced by screen readers\n9. Verify form validation errors are accessible\n10. Check ARIA landmarks and roles are properly used",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-27",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.27: Performance and Loading",
    "description": "Verify login page loads efficiently with optimal performance",
    "scenario": "User accesses login page and expects fast loading times",
    "expected_results": "Page loads within acceptable time limits with all styling and functionality",
    "procedure": "1. Clear browser cache\n2. Open browser developer tools Performance tab\n3. Navigate to /auth/login page\n4. Record page load time and performance metrics\n5. Verify total load time is under 2 seconds\n6. Check First Contentful Paint (FCP) is under 1 second\n7. Verify Largest Contentful Paint (LCP) is acceptable\n8. Test page load on slower network connections\n9. Check for render-blocking resources\n10. Verify animations don't impact performance significantly",
    "test_status": "pending",
    "priority": "medium",
    "category": "performance"
  },
  {
    "test_plan_no": "STP-007-28",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.28: Browser Compatibility",
    "description": "Verify login page works correctly across different browsers",
    "scenario": "User accesses login page using different web browsers",
    "expected_results": "Consistent functionality and appearance across major browsers",
    "procedure": "1. Test login page in Chrome (latest version)\n2. Verify all functionality and styling works correctly\n3. Test in Firefox (latest version)\n4. Check form submission and animations\n5. Test in Safari (if available)\n6. Verify gradients and CSS effects work\n7. Test in Edge browser\n8. Check hCaptcha compatibility across browsers\n9. Verify CSS fallbacks work for older browsers\n10. Test mobile browsers (Chrome mobile, Safari mobile)",
    "test_status": "pending",
    "priority": "medium",
    "category": "functional"
  },
  {
    "test_plan_no": "STP-007-29",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.29: Error Message Display",
    "description": "Verify error messages display correctly with proper styling and positioning",
    "scenario": "User encounters various error conditions and views error messages",
    "expected_results": "Error messages are clearly visible, properly styled, and informative",
    "procedure": "1. Navigate to /auth/login page\n2. Trigger validation error (empty fields)\n3. Verify error message appears with proper styling\n4. Check error message positioning and visibility\n5. Test multiple error messages display correctly\n6. Verify error message colors and icons\n7. Check error messages work in dark mode\n8. Test error message accessibility with screen readers\n9. Verify error messages clear appropriately\n10. Check error message text is user-friendly and helpful",
    "test_status": "pending",
    "priority": "medium",
    "category": "ui"
  },
  {
    "test_plan_no": "STP-007-30",
    "module_name": "Login Page",
    "screen_design_ref": "Figure 7.30: Integration Testing",
    "description": "Verify login page integration with other system components",
    "scenario": "User login process integrates correctly with authentication system, database, and other modules",
    "expected_results": "Seamless integration with user management, email verification, password reset, and security systems",
    "procedure": "1. Test login integration with user registration system\n2. Verify login works with email verification workflow\n3. Check integration with password reset functionality\n4. Test login attempt tracking and IP lockout systems\n5. Verify session management integration\n6. Check integration with admin user roles\n7. Test login redirects work with protected routes\n8. Verify integration with hCaptcha service\n9. Check database transaction handling\n10. Test error handling integration across components",
    "test_status": "pending",
    "priority": "high",
    "category": "integration"
  }
]
