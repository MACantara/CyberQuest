import { BaseDialogue } from '../../../dialogues/base-dialogue.js';
import { 
    LevelThreeCompletionDialogue,
    MalwareScanningIntroDialogue,
    RansomwareDecryptionIntroDialogue
} from './index.js';

export class Level3MalwareMayhemDialogue extends BaseDialogue {
    constructor(desktop, character = 'instructor') {
        super(desktop, character);
        this.messages = [
            {
                text: "URGENT! We have a critical situation unfolding during the CyberQuest Gaming Championship. Multiple team systems are reporting infections from malware disguised as a 'gaming performance booster'."
            },
            {
                text: "This is Level 3: Malware Mayhem. A sophisticated malware campaign is targeting gamers with fake performance enhancement tools that actually install multiple types of malicious software."
            },
            {
                text: "Your mission: Identify the different malware types spreading through the tournament network, isolate infected systems, and perform complete digital cleanup before the championship is compromised."
            },
            {
                text: "You'll work with advanced security tools including process monitors, network traffic analyzers, and malware removal utilities. Time is critical - the infection is spreading rapidly across the gaming network."
            },
            {
                text: "Remember: Different malware requires different removal techniques. Ransomware, trojans, rootkits, and spyware each have unique signatures and removal procedures. Study the infection patterns carefully."
            },
            {
                text: "Successfully containing this outbreak and cleaning all infected systems will earn you 200 XP in Threat Detection and the 'Malware Hunter' badge. The tournament's security depends on your expertise!"
            }
        ];
    }

    onComplete() {
        localStorage.setItem('cyberquest_level_3_started', 'true');
        
        // Open the Process Monitor application using application launcher
        if (window.applicationLauncher) {
            setTimeout(async () => {
                await window.applicationLauncher.launchForLevel(3, 'process-monitor', 'Process Monitor');
            }, 500);
        }
    }

    getFinalButtonText() {
        return 'Begin Malware Response';
    }

    static shouldAutoStart() {
        const level3Started = localStorage.getItem('cyberquest_level_3_started');
        const level2Completed = localStorage.getItem('cyberquest_level_2_completed');
        return level2Completed && !level3Started;
    }

    static startLevel3Dialogue(desktop) {
        const dialogue = new Level3MalwareMayhemDialogue(desktop);
        dialogue.start();
    }

    // Static methods to trigger specific level-three dialogues
    static async startMalwareScanningIntroDialogue(desktop) {
        if (MalwareScanningIntroDialogue.shouldAutoStart && MalwareScanningIntroDialogue.shouldAutoStart()) {
            // Ensure no other dialogue is active
            if (window.currentDialogue) {
                window.currentDialogue.cleanup();
            }
            
            const dialogue = new MalwareScanningIntroDialogue(desktop);
            window.currentDialogue = dialogue;
            dialogue.start();
        }
    }

    static async startRansomwareDecryptionIntroDialogue(desktop) {
        if (RansomwareDecryptionIntroDialogue.shouldAutoStart && RansomwareDecryptionIntroDialogue.shouldAutoStart()) {
            // Ensure no other dialogue is active
            if (window.currentDialogue) {
                window.currentDialogue.cleanup();
            }
            
            const dialogue = new RansomwareDecryptionIntroDialogue(desktop);
            window.currentDialogue = dialogue;
            dialogue.start();
        }
    }

    static async startLevelThreeCompletionDialogue(desktop) {
        if (LevelThreeCompletionDialogue.shouldAutoStart && LevelThreeCompletionDialogue.shouldAutoStart()) {
            // Ensure no other dialogue is active
            if (window.currentDialogue) {
                window.currentDialogue.cleanup();
            }
            
            const dialogue = new LevelThreeCompletionDialogue(desktop);
            window.currentDialogue = dialogue;
            dialogue.start();
        }
    }

    // Manual trigger methods for specific level-three stages
    static triggerMalwareScanningDialogue(desktop) {
        // Ensure no other dialogue is active
        if (window.currentDialogue) {
            window.currentDialogue.cleanup();
        }
        
        const dialogue = new MalwareScanningIntroDialogue(desktop);
        window.currentDialogue = dialogue;
        dialogue.start();
    }

    static triggerRansomwareDecryptionDialogue(desktop) {
        // Ensure no other dialogue is active
        if (window.currentDialogue) {
            window.currentDialogue.cleanup();
        }
        
        const dialogue = new RansomwareDecryptionIntroDialogue(desktop);
        window.currentDialogue = dialogue;
        dialogue.start();
    }

    static triggerLevelThreeCompletionDialogue(desktop) {
        // Ensure no other dialogue is active
        if (window.currentDialogue) {
            window.currentDialogue.cleanup();
        }
        
        const dialogue = new LevelThreeCompletionDialogue(desktop);
        window.currentDialogue = dialogue;
        dialogue.start();
    }

    // Start a level dialogue by name (for dialogue manager compatibility)
    async startLevelDialogue(levelDialogueName, character = 'security-analyst') {
        console.log(`[Level3DialogueManager] Starting level dialogue: ${levelDialogueName}`);
        
        switch (levelDialogueName) {
            case 'malware-scanning-intro':
                return Level3MalwareMayhemDialogue.triggerMalwareScanningDialogue(this.desktop);
            case 'ransomware-decryption-intro':
                return Level3MalwareMayhemDialogue.triggerRansomwareDecryptionDialogue(this.desktop);
            case 'level-three-completion':
                return Level3MalwareMayhemDialogue.triggerLevelThreeCompletionDialogue(this.desktop);
            default:
                console.warn(`Unknown level-three dialogue: ${levelDialogueName}`);
        }
    }
}
