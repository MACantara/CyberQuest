/**
 * UI Renderer Module for Vulnerability Scanner
 * Handles HTML generation and DOM manipulation
 */
export class VulnerabilityScannerUIRenderer {
    constructor() {
        this.elements = {};
    }

    createMainHTML() {
        return `
            <div class="h-full bg-black text-white overflow-hidden flex flex-col">
                <!-- Header -->
                <div class="bg-gray-800 border-b border-gray-600 p-4 flex-shrink-0">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-3">
                            <div class="w-8 h-8 bg-red-600 rounded flex items-center justify-center">
                                <i class="bi bi-shield-exclamation text-white text-sm"></i>
                            </div>
                            <div>
                                <h2 class="text-lg font-semibold text-white">CyberQuest Vulnerability Scanner</h2>
                                <p class="text-xs text-gray-400">OWASP ZAP Simulation - Web Application Security Testing</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="scan-status px-3 py-1 bg-gray-700 rounded text-xs font-mono">
                                Status: <span id="scanStatusText" class="text-green-400">Ready</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Main Interface -->
                <div class="flex flex-1 overflow-hidden">
                    <!-- Left Panel - Targets & Configuration -->
                    <div class="w-1/3 bg-gray-700 border-r border-gray-600 overflow-y-auto">
                        <div class="p-4">
                            <!-- Target Selection -->
                            <div class="mb-6">
                                <h3 class="text-sm font-semibold text-gray-200 mb-3 flex items-center">
                                    <i class="bi bi-bullseye mr-2"></i>
                                    Target Selection
                                </h3>
                                <div class="space-y-2">
                                    <select id="targetSelect" class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:border-green-400 focus:outline-none cursor-pointer">
                                        <option value="">Select target...</option>
                                    </select>
                                    <input 
                                        type="text" 
                                        id="targetUrlInput"
                                        placeholder="https://vote.municipality.gov"
                                        class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:border-green-400 focus:outline-none"
                                    >
                                    <button 
                                        id="addTargetBtn"
                                        class="w-full px-4 py-2 bg-green-400 hover:bg-green-500 text-black rounded text-sm transition-colors font-medium cursor-pointer">
                                        Add Target
                                    </button>
                                </div>
                            </div>

                            <!-- Scan Configuration -->
                            <div class="mb-6">
                                <h3 class="text-sm font-semibold text-gray-200 mb-3 flex items-center">
                                    <i class="bi bi-gear mr-2"></i>
                                    Scan Configuration
                                </h3>
                                <div class="space-y-3">
                                    <!-- Scan Type Selection -->
                                    <div class="mb-3">
                                        <label class="text-sm font-medium text-gray-200 mb-2 block">Scan Type:</label>
                                        <select id="scanTypeSelect" class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:border-green-400 focus:outline-none cursor-pointer">
                                            <option value="comprehensive">Comprehensive Scan</option>
                                            <option value="quick">Quick Scan</option>
                                            <option value="custom">Custom Scan</option>
                                        </select>
                                    </div>
                                    
                                    <!-- Custom Scan Options -->
                                    <div id="customScanOptions" class="scan-type-options hidden">
                                        <h4 class="text-sm font-medium text-gray-200 mb-2">Select Tests:</h4>
                                        <label class="flex items-center text-sm text-gray-300 mb-2 cursor-pointer">
                                            <input type="checkbox" id="sqlInjectionCheck" class="mr-2 accent-green-400" checked>
                                            SQL Injection Detection
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2 cursor-pointer">
                                            <input type="checkbox" id="xssCheck" class="mr-2 accent-green-400" checked>
                                            Cross-Site Scripting (XSS)
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2 cursor-pointer">
                                            <input type="checkbox" id="directoryTraversalCheck" class="mr-2 accent-green-400" checked>
                                            Directory Traversal
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2 cursor-pointer">
                                            <input type="checkbox" id="authBypassCheck" class="mr-2 accent-green-400" checked>
                                            Authentication Bypass
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2 cursor-pointer">
                                            <input type="checkbox" id="csrfCheck" class="mr-2 accent-green-400">
                                            CSRF Detection
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Scan Controls -->
                            <div class="space-y-2">
                                <button 
                                    id="scanToggleBtn"
                                    class="w-full px-4 py-3 bg-red-600 hover:bg-red-700 text-white rounded font-semibold transition-all duration-200 cursor-pointer"
                                    data-state="ready">
                                    <i class="bi bi-play-fill mr-2"></i>
                                    <span class="btn-text">Start Vulnerability Scan</span>
                                </button>
                                <button 
                                    id="exportResultsBtn"
                                    class="w-full px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded text-sm transition-colors cursor-pointer"
                                    disabled>
                                    <i class="bi bi-download mr-2"></i>
                                    Export Results
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Right Panel - Results & Details -->
                    <div class="flex-1 flex flex-col">
                        <!-- Progress Bar -->
                        <div id="progressContainer" class="bg-gray-800 border-b border-gray-600 p-4 hidden flex-shrink-0">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="text-sm font-semibold text-gray-200">Scan Progress</h3>
                                <span id="progressText" class="text-xs text-gray-400">0%</span>
                            </div>
                            <div class="w-full bg-gray-700 rounded-full h-2">
                                <div id="progressBar" class="bg-green-400 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                            </div>
                            <div id="currentTest" class="text-xs text-gray-500 mt-1"></div>
                        </div>

                        <!-- Statistics Panel -->
                        <div class="stats-panel bg-gray-800 px-4 py-2 border-b border-gray-600 flex-shrink-0">
                            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
                                <div class="stat-item">
                                    <div id="totalTargets" class="text-lg font-bold text-green-400">0</div>
                                    <div class="text-xs text-gray-400">Total Targets</div>
                                </div>
                                <div class="stat-item">
                                    <div id="vulnerableTargets" class="text-lg font-bold text-red-400">0</div>
                                    <div class="text-xs text-gray-400">Vulnerable</div>
                                </div>
                                <div class="stat-item">
                                    <div id="totalVulns" class="text-lg font-bold text-yellow-400">0</div>
                                    <div class="text-xs text-gray-400">Vulnerabilities</div>
                                </div>
                                <div class="stat-item">
                                    <div id="highSeverity" class="text-lg font-bold text-red-500">0</div>
                                    <div class="text-xs text-gray-400">High/Critical</div>
                                </div>
                            </div>
                        </div>

                        <!-- Tab Navigation -->
                        <div class="tab-navigation bg-gray-800 border-b border-gray-600 flex-shrink-0">
                            <div class="flex">
                                <button class="tab-btn active px-4 py-2 text-sm font-medium border-r border-gray-600 bg-green-400 text-black cursor-pointer" data-tab="vulnerabilities">
                                    Vulnerabilities <span id="vulnCount" class="ml-1 px-2 py-0.5 bg-black text-white text-xs rounded">0</span>
                                </button>
                                <button class="tab-btn px-4 py-2 text-sm font-medium border-r border-gray-600 text-gray-100 hover:text-white hover:bg-gray-700 transition-colors cursor-pointer" data-tab="requests">
                                    HTTP Requests <span id="requestCount" class="ml-1 px-2 py-0.5 bg-gray-600 text-white text-xs rounded">0</span>
                                </button>
                                <button class="tab-btn px-4 py-2 text-sm font-medium border-r border-gray-600 text-gray-100 hover:text-white hover:bg-gray-700 transition-colors cursor-pointer" data-tab="evidence">
                                    Evidence <span id="evidenceCount" class="ml-1 px-2 py-0.5 bg-gray-600 text-white text-xs rounded">0</span>
                                </button>
                                <button class="tab-btn px-4 py-2 text-sm font-medium text-gray-100 hover:text-white hover:bg-gray-700 transition-colors cursor-pointer" data-tab="targets">
                                    Target Management
                                </button>
                            </div>
                        </div>

                        <!-- Tab Content -->
                        <div class="tab-content flex-1 overflow-hidden bg-black">
                            <!-- Vulnerabilities Tab -->
                            <div id="vulnerabilitiesTab" class="tab-pane active h-full flex flex-col">
                                <div class="flex-1 overflow-y-auto">
                                    <div class="vulnerabilities-list p-4">
                                        <div id="vulnerabilitiesContainer" class="space-y-3">
                                            <div class="text-center text-gray-500 py-8">
                                                <i class="bi bi-shield-check text-4xl mb-4"></i>
                                                <p>No vulnerabilities found yet. Start a scan to begin testing.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- HTTP Requests Tab -->
                            <div id="requestsTab" class="tab-pane h-full flex flex-col hidden">
                                <div class="flex-1 overflow-y-auto">
                                    <div class="requests-list p-4">
                                        <div id="requestsContainer">
                                            <div class="text-center text-gray-500 py-8">
                                                <i class="bi bi-arrow-left-right text-4xl mb-4"></i>
                                                <p>HTTP request history will appear here during scanning.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Evidence Tab -->
                            <div id="evidenceTab" class="tab-pane h-full flex flex-col hidden">
                                <div class="flex-1 overflow-y-auto">
                                    <div class="evidence-list p-4">
                                        <div id="evidenceContainer">
                                            <div class="text-center text-gray-500 py-8">
                                                <i class="bi bi-camera text-4xl mb-4"></i>
                                                <p>No evidence collected. Evidence will be gathered during vulnerability detection.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Target Management Tab -->
                            <div id="targetsTab" class="tab-pane h-full flex flex-col hidden">
                                <div class="flex-1 overflow-y-auto">
                                    <div class="target-management p-4">
                                        <div class="mb-4">
                                            <h3 class="text-lg font-semibold mb-2 text-gray-200">Target Registry</h3>
                                            <div id="targetsList" class="space-y-2">
                                                <!-- Target list will be populated here -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    cacheElements() {
        // Status and controls
        this.elements.scanStatusText = document.getElementById('scanStatusText');
        this.elements.targetSelect = document.getElementById('targetSelect');
        this.elements.targetUrlInput = document.getElementById('targetUrlInput');
        this.elements.addTargetBtn = document.getElementById('addTargetBtn');
        this.elements.scanTypeSelect = document.getElementById('scanTypeSelect');
        this.elements.scanToggleBtn = document.getElementById('scanToggleBtn');
        this.elements.exportResultsBtn = document.getElementById('exportResultsBtn');
        this.elements.customScanOptions = document.getElementById('customScanOptions');

        // Progress
        this.elements.progressContainer = document.getElementById('progressContainer');
        this.elements.progressBar = document.getElementById('progressBar');
        this.elements.progressText = document.getElementById('progressText');
        this.elements.currentTest = document.getElementById('currentTest');

        // Statistics
        this.elements.totalTargets = document.getElementById('totalTargets');
        this.elements.vulnerableTargets = document.getElementById('vulnerableTargets');
        this.elements.totalVulns = document.getElementById('totalVulns');
        this.elements.highSeverity = document.getElementById('highSeverity');

        // Content containers
        this.elements.vulnerabilitiesContainer = document.getElementById('vulnerabilitiesContainer');
        this.elements.requestsContainer = document.getElementById('requestsContainer');
        this.elements.evidenceContainer = document.getElementById('evidenceContainer');
        this.elements.targetsList = document.getElementById('targetsList');

        // Counters
        this.elements.vulnCount = document.getElementById('vulnCount');
        this.elements.requestCount = document.getElementById('requestCount');
        this.elements.evidenceCount = document.getElementById('evidenceCount');

        // Scan options
        this.elements.scanOptions = {
            sqlInjection: document.getElementById('sqlInjectionCheck'),
            xss: document.getElementById('xssCheck'),
            directoryTraversal: document.getElementById('directoryTraversalCheck'),
            authenticationBypass: document.getElementById('authBypassCheck'),
            csrf: document.getElementById('csrfCheck')
        };
    }

    updateScanControls(isScanning) {
        const btn = this.elements.scanToggleBtn;
        const icon = btn.querySelector('i');
        const text = btn.querySelector('.btn-text');
        
        if (isScanning) {
            btn.classList.remove('bg-red-600', 'hover:bg-red-700');
            btn.classList.add('bg-gray-600', 'hover:bg-gray-700');
            btn.dataset.state = 'scanning';
            icon.className = 'bi bi-stop-fill mr-2';
            text.textContent = 'Stop Vulnerability Scan';
            this.elements.exportResultsBtn.disabled = true;
        } else {
            btn.classList.remove('bg-gray-600', 'hover:bg-gray-700');
            btn.classList.add('bg-red-600', 'hover:bg-red-700');
            btn.dataset.state = 'ready';
            icon.className = 'bi bi-play-fill mr-2';
            text.textContent = 'Start Vulnerability Scan';
            this.elements.exportResultsBtn.disabled = false;
        }
        
        this.elements.scanStatusText.textContent = isScanning ? 'Scanning...' : 'Ready';
        this.elements.scanStatusText.className = isScanning ? 'text-yellow-400' : 'text-green-400';
    }

    showProgress() {
        this.elements.progressContainer.classList.remove('hidden');
        this.updateProgress(0);
    }

    hideProgress() {
        this.elements.progressContainer.classList.add('hidden');
    }

    updateProgress(progress) {
        this.elements.progressBar.style.width = `${progress}%`;
        this.elements.progressText.textContent = `${progress}%`;
    }

    addVulnerabilityToUI(vulnerability) {
        if (this.elements.vulnerabilitiesContainer.querySelector('.text-center')) {
            this.elements.vulnerabilitiesContainer.innerHTML = '';
        }

        const vulnElement = document.createElement('div');
        vulnElement.className = 'vulnerability-card bg-gray-800 border border-gray-600 p-4 rounded-l-4 hover:bg-gray-700 transition-colors cursor-pointer ' + 
            this.getSeverityBorderColor(vulnerability.severity);
        
        vulnElement.innerHTML = `
            <div class="flex justify-between items-start mb-2">
                <h3 class="font-semibold text-white">${vulnerability.title}</h3>
                <span class="px-2 py-1 text-xs rounded ${this.getSeverityColor(vulnerability.severity)}">
                    ${vulnerability.severity}
                </span>
            </div>
            <p class="text-sm text-gray-300 mb-2">${vulnerability.description}</p>
            <div class="text-xs text-gray-400 space-y-1">
                <div><strong class="text-gray-300">Target:</strong> ${vulnerability.target}</div>
                <div><strong class="text-gray-300">Parameter:</strong> ${vulnerability.parameter}</div>
                <div><strong class="text-gray-300">CVSS Score:</strong> ${vulnerability.cvssScore}</div>
                <div><strong class="text-gray-300">Impact:</strong> ${vulnerability.impact}</div>
                <div><strong class="text-gray-300">Recommendation:</strong> ${vulnerability.recommendation}</div>
            </div>
        `;

        this.elements.vulnerabilitiesContainer.appendChild(vulnElement);
    }

    addRequestToUI(request) {
        if (this.elements.requestsContainer.querySelector('.text-center')) {
            this.elements.requestsContainer.innerHTML = '';
        }

        const requestElement = document.createElement('div');
        requestElement.className = 'request-card bg-gray-800 border border-gray-600 p-3 rounded mb-2 hover:bg-gray-700 transition-colors cursor-pointer';
        
        requestElement.innerHTML = `
            <div class="flex justify-between items-start mb-2">
                <span class="font-mono text-sm text-green-400">${request.method} ${request.url}</span>
                <span class="text-xs text-gray-500">${new Date(request.timestamp).toLocaleTimeString()}</span>
            </div>
            <div class="text-xs text-gray-400">
                <div><strong class="text-gray-300">Test:</strong> ${request.testName}</div>
                <div><strong class="text-gray-300">Payload:</strong> <code class="bg-gray-900 text-gray-300 px-1 rounded">${request.payload}</code></div>
            </div>
        `;

        this.elements.requestsContainer.appendChild(requestElement);
    }

    addEvidenceToUI(evidence) {
        if (this.elements.evidenceContainer.querySelector('.text-center')) {
            this.elements.evidenceContainer.innerHTML = '';
        }

        const evidenceElement = document.createElement('div');
        evidenceElement.className = 'evidence-card bg-gray-800 border border-gray-600 p-3 rounded mb-2 hover:bg-gray-700 transition-colors cursor-pointer';
        
        evidenceElement.innerHTML = `
            <div class="flex justify-between items-start mb-2">
                <h4 class="font-medium text-white">${evidence.title}</h4>
                <span class="text-xs text-gray-500">${new Date(evidence.timestamp).toLocaleTimeString()}</span>
            </div>
            <div class="text-sm space-y-1">
                <div><strong class="text-gray-300">Type:</strong> <span class="text-gray-400">${evidence.type}</span></div>
                <div><strong class="text-gray-300">URL:</strong> <code class="text-xs bg-gray-900 text-gray-300 px-1 rounded">${evidence.request.url}</code></div>
                <div><strong class="text-gray-300">Vulnerability ID:</strong> <code class="text-xs bg-gray-900 text-gray-300 px-1 rounded">${evidence.vulnerabilityId}</code></div>
            </div>
        `;

        this.elements.evidenceContainer.appendChild(evidenceElement);
    }

    updateCounters() {
        const vulnCount = this.elements.vulnerabilitiesContainer.children.length;
        const requestCount = this.elements.requestsContainer.children.length;
        const evidenceCount = this.elements.evidenceContainer.children.length;

        this.elements.vulnCount.textContent = vulnCount;
        this.elements.requestCount.textContent = requestCount;
        this.elements.evidenceCount.textContent = evidenceCount;
    }

    getSeverityColor(severity) {
        const colors = {
            'Critical': 'bg-red-100 text-red-800',
            'High': 'bg-orange-100 text-orange-800',
            'Medium': 'bg-yellow-100 text-yellow-800',
            'Low': 'bg-green-100 text-green-800'
        };
        return colors[severity] || 'bg-gray-100 text-gray-800';
    }

    getSeverityBorderColor(severity) {
        const colors = {
            'Critical': 'border-red-500',
            'High': 'border-orange-500',
            'Medium': 'border-yellow-500',
            'Low': 'border-green-500'
        };
        return colors[severity] || 'border-gray-500';
    }

    getCriticalityColor(criticality) {
        const colors = {
            'Critical': 'bg-red-100 text-red-800',
            'High': 'bg-orange-100 text-orange-800',
            'Medium': 'bg-yellow-100 text-yellow-800',
            'Low': 'bg-green-100 text-green-800'
        };
        return colors[criticality] || 'bg-gray-100 text-gray-800';
    }
}
