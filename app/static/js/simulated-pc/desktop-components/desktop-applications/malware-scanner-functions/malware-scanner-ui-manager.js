export class MalwareScannerUIManager {
    constructor(app, scanEngine, quarantineManager) {
        this.app = app;
        this.scanEngine = scanEngine;
        this.quarantineManager = quarantineManager;
    }

    createContent() {
        const scanProgress = this.scanEngine.getScanProgress();
        const scanResults = this.scanEngine.getScanResults();
        const quarantineStats = this.quarantineManager.getQuarantineStats();

        return `
            <div class="h-full flex flex-col bg-gray-900 text-white">
                <!-- Header -->
                <div class="bg-gray-800 p-4 border-b border-gray-700">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-3">
                            <div class="w-8 h-8 bg-red-600 rounded flex items-center justify-center">
                                <i class="bi bi-shield-exclamation text-white"></i>
                            </div>
                            <div>
                                <h2 class="text-lg font-semibold text-white">CyberQuest Malware Scanner</h2>
                                <p class="text-sm text-gray-400">Real-time threat detection and removal</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="w-3 h-3 rounded-full ${scanProgress.isScanning ? 'bg-yellow-400 animate-pulse' : 'bg-green-400'}"></div>
                            <span class="text-sm text-gray-300">${scanProgress.isScanning ? 'Scanning...' : 'Ready'}</span>
                        </div>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="flex-1 flex">
                    <!-- Left Panel - Scanner Controls -->
                    <div class="w-1/3 bg-gray-800 border-r border-gray-700 p-4">
                        <div class="space-y-4">
                            <!-- Scan Types -->
                            <div>
                                <h3 class="text-md font-semibold text-green-400 mb-3">Scan Options</h3>
                                <div class="space-y-2">
                                    <label class="flex items-center space-x-2 cursor-pointer">
                                        <input type="radio" name="scanType" value="quick" checked class="text-green-400">
                                        <span class="text-sm">Quick Scan (Recommended)</span>
                                    </label>
                                    <label class="flex items-center space-x-2 cursor-pointer">
                                        <input type="radio" name="scanType" value="full" class="text-green-400">
                                        <span class="text-sm">Full System Scan</span>
                                    </label>
                                    <label class="flex items-center space-x-2 cursor-pointer">
                                        <input type="radio" name="scanType" value="custom" class="text-green-400">
                                        <span class="text-sm">Custom Scan</span>
                                    </label>
                                </div>
                            </div>

                            <!-- Scan Controls -->
                            <div class="pt-4 border-t border-gray-700">
                                <button id="start-scan-btn" class="w-full py-3 px-4 bg-green-600 hover:bg-green-500 text-white rounded font-semibold transition-colors cursor-pointer ${scanProgress.isScanning ? 'opacity-50 cursor-not-allowed' : ''}" ${scanProgress.isScanning ? 'disabled' : ''}>
                                    <i class="bi bi-play-circle mr-2"></i>Start Scan
                                </button>
                                <button id="stop-scan-btn" class="w-full mt-2 py-2 px-4 bg-red-600 hover:bg-red-500 text-white rounded text-sm transition-colors cursor-pointer ${!scanProgress.isScanning ? 'opacity-50 cursor-not-allowed' : ''}" ${!scanProgress.isScanning ? 'disabled' : ''}>
                                    <i class="bi bi-stop-circle mr-2"></i>Stop Scan
                                </button>
                            </div>

                            <!-- Real-time Protection -->
                            <div class="pt-4 border-t border-gray-700">
                                <h3 class="text-md font-semibold text-green-400 mb-3">Protection Status</h3>
                                <div class="space-y-2">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm">Real-time Protection</span>
                                        <span class="text-green-400 text-sm">ON</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm">Auto-quarantine</span>
                                        <span class="text-green-400 text-sm">ON</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm">Cloud Protection</span>
                                        <span class="text-green-400 text-sm">ON</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Quick Actions -->
                            <div class="pt-4 border-t border-gray-700">
                                <h3 class="text-md font-semibold text-green-400 mb-3">Quick Actions</h3>
                                <div class="space-y-2">
                                    <button id="quarantine-btn" class="w-full py-2 px-3 bg-gray-700 hover:bg-gray-600 text-white rounded text-sm transition-colors cursor-pointer">
                                        <i class="bi bi-archive mr-2"></i>View Quarantine (${quarantineStats.total})
                                    </button>
                                    <button id="update-defs-btn" class="w-full py-2 px-3 bg-gray-700 hover:bg-gray-600 text-white rounded text-sm transition-colors cursor-pointer">
                                        <i class="bi bi-download mr-2"></i>Update Definitions
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Panel - Scan Results -->
                    <div class="flex-1 p-4">
                        <div class="h-full flex flex-col">
                            <!-- Scan Progress -->
                            <div id="scan-progress-section" class="mb-4 ${scanProgress.isScanning ? '' : 'hidden'}">
                                <h3 class="text-md font-semibold text-green-400 mb-2">Scan Progress</h3>
                                <div class="bg-gray-700 rounded-full h-3 mb-2">
                                    <div id="progress-bar" class="bg-green-500 h-3 rounded-full transition-all duration-300" style="width: ${scanProgress.progress}%"></div>
                                </div>
                                <div class="flex justify-between text-sm text-gray-400">
                                    <span id="scan-status">Initializing scan...</span>
                                    <span id="scan-percentage">${scanProgress.progress}%</span>
                                </div>
                                <div class="mt-2 text-xs text-gray-500" id="current-file">Preparing...</div>
                            </div>

                            <!-- Scan Results -->
                            <div class="flex-1">
                                <div class="flex items-center justify-between mb-3">
                                    <h3 class="text-md font-semibold text-green-400">Scan Results</h3>
                                    <div class="text-sm text-gray-400">
                                        <span id="threats-found">${scanResults.length}</span> threats detected
                                    </div>
                                </div>
                                
                                <div id="results-container" class="bg-gray-800 rounded border border-gray-700 h-full overflow-y-auto">
                                    ${this.renderScanResults()}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status Bar -->
                <div class="bg-gray-800 p-3 border-t border-gray-700 flex items-center justify-between text-sm">
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-400">Last scan: Never</span>
                        <span class="text-gray-400">Definitions: Up to date</span>
                    </div>
                    <div class="flex items-center space-x-2">
                        <div class="w-2 h-2 rounded-full bg-green-400"></div>
                        <span class="text-gray-400">System protected</span>
                    </div>
                </div>
            </div>
        `;
    }

    renderScanResults() {
        const scanResults = this.scanEngine.getScanResults();
        
        if (scanResults.length === 0) {
            return `
                <div class="flex items-center justify-center h-full text-gray-500">
                    <div class="text-center">
                        <i class="bi bi-shield-check text-4xl mb-2"></i>
                        <p>No threats detected</p>
                        <p class="text-sm">Your system appears to be clean</p>
                    </div>
                </div>
            `;
        }

        return scanResults.map(result => `
            <div class="p-3 border-b border-gray-700 hover:bg-gray-750 transition-colors">
                <div class="flex items-center justify-between">
                    <div class="flex-1">
                        <div class="flex items-center space-x-2">
                            <i class="bi bi-exclamation-triangle text-red-400"></i>
                            <span class="font-medium text-red-400">${result.name}</span>
                            <span class="text-xs bg-red-600 text-white px-2 py-1 rounded">${result.type}</span>
                        </div>
                        <div class="text-sm text-gray-400 mt-1">${result.path}</div>
                        <div class="text-xs text-gray-500 mt-1">Risk Level: ${result.riskLevel} | Size: ${result.size}</div>
                    </div>
                    <div class="flex space-x-2">
                        <button class="px-3 py-1 bg-yellow-600 hover:bg-yellow-500 text-white rounded text-xs cursor-pointer" onclick="window.malwareScannerApp.quarantineThreat('${result.id}')">
                            Quarantine
                        </button>
                        <button class="px-3 py-1 bg-red-600 hover:bg-red-500 text-white rounded text-xs cursor-pointer" onclick="window.malwareScannerApp.deleteThreat('${result.id}')">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        `).join('');
    }

    updateContent() {
        const contentElement = this.app.windowElement?.querySelector('.window-content');
        if (contentElement) {
            contentElement.innerHTML = this.createContent();
        }
    }

    updateScanProgress(progress) {
        const statusElement = this.app.windowElement?.querySelector('#scan-status');
        const percentageElement = this.app.windowElement?.querySelector('#scan-percentage');
        const fileElement = this.app.windowElement?.querySelector('#current-file');
        const progressBar = this.app.windowElement?.querySelector('#progress-bar');
        
        if (statusElement) statusElement.textContent = progress.status;
        if (percentageElement) percentageElement.textContent = `${progress.progress}%`;
        if (fileElement) fileElement.textContent = `Scanning: ${progress.currentFile}`;
        if (progressBar) progressBar.style.width = `${progress.progress}%`;
    }

    showScanComplete(threatsFound) {
        const message = threatsFound > 0 
            ? `Scan complete! ${threatsFound} threats detected.`
            : 'Scan complete! No threats detected.';
        
        this.showNotification(message, threatsFound > 0 ? 'warning' : 'success');
    }

    showQuarantine(stats) {
        const quarantineDetails = Object.entries(stats.byType)
            .map(([type, count]) => `${type}: ${count}`)
            .join('\n');
        
        const message = `Quarantine contains ${stats.total} items:\n${quarantineDetails}`;
        alert(message);
    }

    showNotification(message, type = 'info') {
        // Simple notification system
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 p-4 rounded shadow-lg z-50 ${
            type === 'success' ? 'bg-green-600' : 
            type === 'warning' ? 'bg-yellow-600' : 
            type === 'error' ? 'bg-red-600' : 'bg-blue-600'
        } text-white`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 3000);
    }

    checkMalwareCleanupComplete() {
        const remainingThreats = this.scanEngine.getScanResults().length;
        const quarantineCount = this.quarantineManager.getQuarantineStats().total;
        
        if (remainingThreats === 0 && quarantineCount > 0) {
            setTimeout(() => {
                import('../../../dialogues/levels/level-three/ransomware-decryption-intro.js')
                    .then(({ RansomwareDecryptionIntroDialogue }) => {
                        new RansomwareDecryptionIntroDialogue(this.app.desktop).start();
                    })
                    .catch(err => console.error('Failed to launch ransomware decryption dialogue:', err));
            }, 2000);
        }
    }
}
