import { BaseProcess } from './base-process.js';

export class RansomwareGamingOptimizerProcess extends BaseProcess {
    constructor() {
        super({
            name: 'gaming_optimizer_pro.exe',
            executable: 'temp\\downloads\\gaming_optimizer_pro.exe',
            cpu: 18.5,
            memory: 189.7,
            priority: 'High',
            category: 'malware',
            description: 'Fake gaming optimizer - actually ransomware'
        });
    }

    getRiskFactors() {
        const riskFactors = super.getRiskFactors();
        riskFactors.push('Running from suspicious temporary or download location');
        riskFactors.push('Potentially fraudulent gaming enhancement tool');
        riskFactors.push('High priority process with questionable gaming purpose');
        return riskFactors;
    }

    static getCategory() {
        return 'malware';
    }
}

export class TrojanSteamHelperProcess extends BaseProcess {
    constructor() {
        super({
            name: 'steam_helper.exe',
            executable: 'temp\\steam_helper.exe',
            cpu: 8.8,
            memory: 94.1,
            priority: 'Normal',
            category: 'malware',
            description: 'Trojan masquerading as Steam helper'
        });
    }

    getRiskFactors() {
        const riskFactors = super.getRiskFactors();
        riskFactors.push('Process name mimics legitimate gaming software but runs from wrong location');
        riskFactors.push('Running from suspicious temporary or download location');
        return riskFactors;
    }

    static getCategory() {
        return 'malware';
    }
}

export class SpywarePerformanceMonitorProcess extends BaseProcess {
    constructor() {
        super({
            name: 'performance_monitor.exe',
            executable: 'program files\\common files\\performance_monitor.exe',
            cpu: 3.3,
            memory: 54.2,
            priority: 'Low',
            category: 'malware',
            description: 'Spyware monitoring gaming activities'
        });
    }

    getRiskFactors() {
        const riskFactors = super.getRiskFactors();
        riskFactors.push('Potentially fraudulent gaming enhancement tool');
        return riskFactors;
    }

    static getCategory() {
        return 'malware';
    }
}

export class RootkitSystemOptimizerProcess extends BaseProcess {
    constructor() {
        super({
            name: 'system_optimizer.exe',
            executable: 'windows\\system32\\system_optimizer.exe',
            cpu: 11.4,
            memory: 128.9,
            priority: 'System',
            category: 'malware',
            description: 'Rootkit hiding in system directory'
        });
    }

    getRiskFactors() {
        const riskFactors = super.getRiskFactors();
        riskFactors.push('Suspicious process running from system directory');
        riskFactors.push('High priority process with questionable gaming purpose');
        return riskFactors;
    }

    static getCategory() {
        return 'malware';
    }
}
