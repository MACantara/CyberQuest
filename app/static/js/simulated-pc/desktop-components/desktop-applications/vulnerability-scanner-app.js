// TODO: Add cursor-pointer Tailwind CSS class to interactive elements
// TODO: Merge the "Start Scan" and "Stop Scan" buttons into a single toggle button
// TODO: After a scanning session, count the number of vulnerabilities found and display in the target management UI
// TODO: Add ability to test the discovered vulnerabilities against the target
// TODO: Add ability to document the vulnerabilities found in a report format
// TODO: Add the Ethical Dilemma Scenarios based on LEVEL4_IDEAS.md
// TODO: Check LEVEL4_IDEAS.md for any remaining tasks
// TODO: Create tutorial for the vulnerability scanner app
// TODO: Refactor web-target-registry.js into individual target files for each target

import { WindowBase } from '../window-base.js';
import { VulnerabilityScanner } from './vulnerability-scanner-functions/vulnerability-scanner.js';
import { webTargetRegistry } from './vulnerability-scanner-functions/web-target-registry.js';
import { VulnerabilityScannerUI } from './vulnerability-scanner-functions/vulnerability-scanner-ui.js';

export class VulnerabilityScannerApp extends WindowBase {
    constructor() {
        super('vulnerability-scanner', 'Web Vulnerability Scanner', {
            width: '85%',
            height: '80%',
            x: 100,
            y: 50
        });
        
        this.scanner = new VulnerabilityScanner();
        this.targetRegistry = webTargetRegistry;
        this.ui = null;
        this.currentScan = null;
        this.isScanning = false;
    }

    createContent() {
        return `
            <div class="h-full bg-black text-white overflow-hidden">
                <!-- Header -->
                <div class="bg-gray-800 border-b border-gray-600 p-4">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-3">
                            <div class="w-8 h-8 bg-red-600 rounded flex items-center justify-center">
                                <i class="bi bi-shield-exclamation text-white text-sm"></i>
                            </div>
                            <div>
                                <h2 class="text-lg font-semibold text-white">CyberQuest Vulnerability Scanner</h2>
                                <p class="text-xs text-gray-400">OWASP ZAP Simulation - Web Application Security Testing</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="scan-status px-3 py-1 bg-gray-700 rounded text-xs font-mono">
                                Status: <span id="scan-status-text" class="text-green-400">Ready</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Main Interface -->
                <div class="flex h-full">
                    <!-- Left Panel - Targets & Configuration -->
                    <div class="w-1/3 bg-gray-700 border-r border-gray-600 overflow-y-auto">
                        <div class="p-4">
                            <!-- Target Selection -->
                            <div class="mb-6">
                                <h3 class="text-sm font-semibold text-gray-200 mb-3 flex items-center">
                                    <i class="bi bi-bullseye mr-2"></i>
                                    Target Selection
                                </h3>
                                <div class="space-y-2">
                                    <input 
                                        type="text" 
                                        id="target-url-input"
                                        placeholder="https://vote.municipality.gov"
                                        class="w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:border-green-400 focus:outline-none"
                                    >
                                    <button 
                                        id="add-target-btn"
                                        class="w-full px-4 py-2 bg-green-400 hover:bg-green-500 text-black rounded text-sm transition-colors font-medium">
                                        Add Target
                                    </button>
                                </div>
                            </div>

                            <!-- Target List -->
                            <div class="mb-6">
                                <h3 class="text-sm font-semibold text-gray-200 mb-3 flex items-center">
                                    <i class="bi bi-list-ul mr-2"></i>
                                    Discovered Targets
                                </h3>
                                <div id="target-list" class="space-y-2">
                                    <!-- Targets will be populated here -->
                                </div>
                            </div>

                            <!-- Scan Configuration -->
                            <div class="mb-6">
                                <h3 class="text-sm font-semibold text-gray-200 mb-3 flex items-center">
                                    <i class="bi bi-gear mr-2"></i>
                                    Scan Configuration
                                </h3>
                                <div class="space-y-3">
                                    <div class="scan-type-options">
                                        <label class="flex items-center text-sm text-gray-300 mb-2">
                                            <input type="checkbox" id="scan-sql" class="mr-2 accent-green-400" checked>
                                            SQL Injection Detection
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2">
                                            <input type="checkbox" id="scan-xss" class="mr-2 accent-green-400" checked>
                                            Cross-Site Scripting (XSS)
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2">
                                            <input type="checkbox" id="scan-dir" class="mr-2 accent-green-400" checked>
                                            Directory Traversal
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2">
                                            <input type="checkbox" id="scan-auth" class="mr-2 accent-green-400" checked>
                                            Authentication Bypass
                                        </label>
                                        <label class="flex items-center text-sm text-gray-300 mb-2">
                                            <input type="checkbox" id="scan-csrf" class="mr-2 accent-green-400">
                                            CSRF Detection
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Scan Controls -->
                            <div class="space-y-2">
                                <button 
                                    id="start-scan-btn"
                                    class="w-full px-4 py-3 bg-red-600 hover:bg-red-700 text-white rounded font-semibold transition-colors">
                                    <i class="bi bi-play-fill mr-2"></i>
                                    Start Vulnerability Scan
                                </button>
                                <button 
                                    id="stop-scan-btn"
                                    class="w-full px-4 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded transition-colors"
                                    disabled>
                                    <i class="bi bi-stop-fill mr-2"></i>
                                    Stop Scan
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Right Panel - Results & Details -->
                    <div class="flex-1 flex flex-col">
                        <!-- Scan Progress -->
                        <div class="bg-gray-800 border-b border-gray-600 p-4">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="text-sm font-semibold text-gray-200">Scan Progress</h3>
                                <span id="progress-text" class="text-xs text-gray-400">0 / 0 tests completed</span>
                            </div>
                            <div class="w-full bg-gray-700 rounded-full h-2">
                                <div id="progress-bar" class="bg-green-400 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                            </div>
                        </div>

                        <!-- Results Tabs -->
                        <div class="bg-gray-800 border-b border-gray-600">
                            <div class="flex space-x-0">
                                <button class="result-tab px-4 py-2 text-sm font-medium text-white bg-gray-700 border-r border-gray-600" data-tab="vulnerabilities">
                                    Vulnerabilities <span id="vuln-count" class="ml-1 px-2 py-0.5 bg-red-600 text-xs rounded">0</span>
                                </button>
                                <button class="result-tab px-4 py-2 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-600 hover:bg-gray-700 transition-colors" data-tab="requests">
                                    HTTP Requests <span id="request-count" class="ml-1 px-2 py-0.5 bg-gray-600 text-xs rounded">0</span>
                                </button>
                                <button class="result-tab px-4 py-2 text-sm font-medium text-gray-400 hover:text-white hover:bg-gray-700 transition-colors" data-tab="evidence">
                                    Evidence <span id="evidence-count" class="ml-1 px-2 py-0.5 bg-gray-600 text-xs rounded">0</span>
                                </button>
                            </div>
                        </div>

                        <!-- Results Content -->
                        <div class="flex-1 overflow-y-auto bg-black">
                            <!-- Vulnerabilities Tab -->
                            <div id="tab-vulnerabilities" class="tab-content h-full">
                                <div class="p-4">
                                    <div id="vulnerabilities-list" class="space-y-3">
                                        <div class="text-center text-gray-500 py-8">
                                            <i class="bi bi-shield-check text-4xl mb-4"></i>
                                            <p>No vulnerabilities found yet. Start a scan to begin testing.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- HTTP Requests Tab -->
                            <div id="tab-requests" class="tab-content h-full hidden">
                                <div class="p-4">
                                    <div id="requests-list" class="space-y-2">
                                        <div class="text-center text-gray-500 py-8">
                                            <i class="bi bi-arrow-left-right text-4xl mb-4"></i>
                                            <p>HTTP request history will appear here during scanning.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Evidence Tab -->
                            <div id="tab-evidence" class="tab-content h-full hidden">
                                <div class="p-4">
                                    <div id="evidence-list" class="space-y-2">
                                        <div class="text-center text-gray-500 py-8">
                                            <i class="bi bi-camera text-4xl mb-4"></i>
                                            <p>Evidence and proof-of-concept data will be collected here.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    initialize() {
        super.initialize();
        
        // Get the content element from the window
        const contentElement = this.windowElement?.querySelector('.window-content');
        if (contentElement) {
            this.ui = new VulnerabilityScannerUI(contentElement, this.scanner, this.targetRegistry);
            this.loadDefaultTargets();
            this.bindEvents();
        } else {
            console.error('Could not find window content element for vulnerability scanner');
        }
    }

    bindEvents() {
        // The UI will handle its own event binding
        // This method is here for any app-level events if needed
    }

    loadDefaultTargets() {
        // The target registry is already initialized with municipality targets
        // Just refresh the UI if it exists
        if (this.ui) {
            this.ui.refresh();
        }
    }

    async startVulnerabilityScan(selectedTarget, scanOptions) {
        if (this.isScanning) return;

        this.isScanning = true;
        
        try {
            this.currentScan = await this.scanner.startScan(selectedTarget, scanOptions, {
                onProgress: (progress) => {
                    if (this.ui) this.ui.updateProgress(progress);
                },
                onVulnerabilityFound: (vulnerability) => {
                    if (this.ui) this.ui.addVulnerability(vulnerability);
                },
                onRequestMade: (request) => {
                    if (this.ui) this.ui.addRequest(request);
                },
                onEvidenceCollected: (evidence) => {
                    if (this.ui) this.ui.addEvidence(evidence);
                }
            });

            await this.currentScan.waitForCompletion();
            this.showNotification('Vulnerability scan completed successfully', 'success');
            
        } catch (error) {
            console.error('Vulnerability scan failed:', error);
            this.showNotification('Vulnerability scan failed: ' + error.message, 'error');
        } finally {
            this.isScanning = false;
        }
    }

    stopScan() {
        if (this.currentScan) {
            this.currentScan.stop();
            this.currentScan = null;
        }
        this.isScanning = false;
        this.showNotification('Vulnerability scan stopped', 'warning');
    }

    exportResults() {
        if (!this.currentScan) return;

        const results = {
            timestamp: new Date().toISOString(),
            target: this.currentScan.target,
            vulnerabilities: this.currentScan.getVulnerabilities(),
            summary: this.currentScan.getSummary()
        };

        // Simulate file download
        const blob = new Blob([JSON.stringify(results, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `vuln_scan_results_${Date.now()}.json`;
        a.click();
        URL.revokeObjectURL(url);
    }

    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white text-sm z-50 ${
            type === 'success' ? 'bg-green-600' : 
            type === 'error' ? 'bg-red-600' : 
            type === 'warning' ? 'bg-yellow-600' : 'bg-blue-600'
        }`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
    }
}
