import { WindowBase } from '../window-base.js';
import { MalwareScannerActivityEmitter } from './malware-scanner-functions/malware-scanner-activity-emitter.js';
import { ScanEngine } from './malware-scanner-functions/scan-engine.js';
import { QuarantineManager } from './malware-scanner-functions/quarantine-manager.js';
import { MalwareScannerEventHandler } from './malware-scanner-functions/malware-scanner-event-handler.js';
import { MalwareScannerUIManager } from './malware-scanner-functions/malware-scanner-ui-manager.js';
import { MalwareScannerActions } from './malware-scanner-functions/malware-scanner-actions.js';

export class MalwareScannerApp extends WindowBase {
    constructor() {
        super('malware-scanner', 'Malware Scanner', {
            width: '80%',
            height: '79%'
        });
        
        // Set up activity emission system
        try {
            this.setupActivityEmission(MalwareScannerActivityEmitter);
        } catch (error) {
            console.warn('Failed to set up activity emission for malware scanner:', error.message);
            this.activityEmitter = null;
        }
        
        // Initialize modular components
        this.scanEngine = new ScanEngine(this.activityEmitter);
        this.quarantineManager = new QuarantineManager(this.activityEmitter);
        this.uiManager = new MalwareScannerUIManager(this, this.scanEngine, this.quarantineManager);
        this.malwareActions = new MalwareScannerActions(this.scanEngine, this.quarantineManager, this.activityEmitter);
        this.eventHandler = new MalwareScannerEventHandler(this, this.scanEngine, this.quarantineManager, this.activityEmitter);
    }

    createContent() {
        return this.uiManager.createContent();
    }

    updateContent() {
        this.uiManager.updateContent();
    }

    initialize() {
        super.initialize();
        this.eventHandler.bindEvents(this.windowElement);
        this.eventHandler.setupGlobalHandlers();
        
        // Mark app as opened
        localStorage.setItem('cyberquest_malwarescanner_opened', 'true');
        
        // Trigger tutorial if not completed
        setTimeout(() => {
            this.checkAndStartTutorial();
        }, 1000);
    }

    async checkAndStartTutorial() {
        try {
            if (window.tutorialManager && window.tutorialManager.shouldAutoStartMalwareScanner) {
                const shouldStart = await window.tutorialManager.shouldAutoStartMalwareScanner();
                if (shouldStart) {
                    console.log('Auto-starting Malware Scanner tutorial...');
                    await window.tutorialManager.startMalwareScannerTutorial();
                }
            }
        } catch (error) {
            console.error('Failed to check/start Malware Scanner tutorial:', error);
        }
    }

    cleanup() {
        this.scanEngine.stopScan();
        this.eventHandler.cleanup();
        super.cleanup();
    }
}