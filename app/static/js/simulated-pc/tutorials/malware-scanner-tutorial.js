import { BaseTutorial } from './base-tutorial.js';
import { tutorialInteractionManager } from './tutorial-interaction-manager.js';

export class MalwareScannerTutorial extends BaseTutorial {
    constructor(desktop) {
        super(desktop);
        this.steps = [
            {
                target: '.bg-gray-800.p-4.border-b.border-gray-700',
                title: 'Malware Scanner Header',
                content: 'Welcome to the CyberQuest Malware Scanner! This powerful tool detects and removes various types of malware including ransomware, trojans, spyware, and rootkits from your system.',
                action: 'highlight',
                position: 'bottom'
            },
            {
                target: '.w-1\\/3.bg-gray-800.border-r.border-gray-700.p-4',
                title: 'Scanner Control Panel',
                content: 'This control panel contains all scanning options and settings. You can choose scan types, manage quarantine, and configure real-time protection from here.',
                action: 'highlight',
                position: 'right'
            },
            {
                target: 'input[name="scanType"][value="quick"]',
                title: 'Quick Scan Option',
                content: 'Quick Scan (recommended) checks the most common malware hiding spots. It\'s faster and catches most threats without doing a full system scan.',
                action: 'highlight',
                position: 'right'
            },
            {
                target: 'input[name="scanType"][value="full"]',
                title: 'Full System Scan',
                content: 'Full System Scan examines every file on your computer. It takes longer but provides the most thorough malware detection.',
                action: 'highlight',
                position: 'right'
            },
            {
                target: '#start-scan-btn',
                title: 'Interactive: Start Malware Scan',
                content: 'Click "Start Scan" to begin scanning your system for malware. The scanner will check files and processes for known threat signatures.',
                action: 'pulse',
                position: 'right',
                interactive: true,
                interaction: {
                    type: 'click',
                    instructions: 'Click the Start Scan button',
                    successMessage: 'Excellent! Malware scan initiated.',
                    autoAdvance: true,
                    advanceDelay: 2000
                }
            },
            {
                target: '#scan-progress-section',
                title: 'Scan Progress Monitoring',
                content: 'This section shows real-time scan progress including percentage complete, current file being scanned, and scan status. Monitor this to track scanning activity.',
                action: 'highlight',
                position: 'left'
            },
            {
                target: '.pt-4.border-t.border-gray-700:has(#quarantine-btn)',
                title: 'Protection Status Panel',
                content: 'The protection status shows your current security settings: Real-time Protection, Auto-quarantine, and Cloud Protection. All should be ON for maximum security.',
                action: 'highlight',
                position: 'right'
            },
            {
                target: '#quarantine-btn',
                title: 'Quarantine Management',
                content: 'The quarantine holds isolated threats safely. Quarantined malware cannot harm your system but can be restored if needed (rarely recommended).',
                action: 'highlight',
                position: 'right'
            },
            {
                target: '#update-defs-btn',
                title: 'Definition Updates',
                content: 'Virus definitions contain signatures of known malware. Regular updates ensure your scanner can detect the latest threats.',
                action: 'highlight',
                position: 'right'
            },
            {
                target: '.flex-1.p-4',
                title: 'Scan Results Area',
                content: 'This area displays scan results and detected threats. When malware is found, you\'ll see threat details, risk levels, and removal options.',
                action: 'highlight',
                position: 'left'
            },
            {
                target: '#results-container',
                title: 'Threat Detection Display',
                content: 'Detected threats appear here with details like threat name, type (Trojan, Ransomware, etc.), file path, and risk level. Each threat has action buttons for quarantine or deletion.',
                action: 'highlight',
                position: 'left'
            },
            {
                target: '.bg-gray-800.p-3.border-t.border-gray-700',
                title: 'Scanner Status Bar',
                content: 'The status bar shows last scan time, definition update status, and overall system protection status. Monitor this for system health indicators.',
                action: 'highlight',
                position: 'top'
            },
            {
                target: '.bg-gray-800.p-4.border-b.border-gray-700',
                title: 'Malware Scanner Mastery Complete!',
                content: 'Outstanding! You\'ve mastered the malware scanner: initiating scans, monitoring progress, understanding protection status, managing quarantine, updating definitions, and analyzing threat results. Use these skills to keep systems clean and secure!',
                action: 'highlight',
                position: 'bottom',
                final: true
            }
        ];
    }

    async start() {
        // Ensure malware scanner is open
        if (!this.desktop.windowManager.windows.has('malware-scanner')) {
            try {
                await this.desktop.windowManager.openMalwareScanner();
                // Wait for the window to fully render
                await new Promise(resolve => setTimeout(resolve, 1000));
            } catch (error) {
                console.error('Malware Scanner application not found:', error);
                return;
            }
        }

        // Initialize CSS first
        this.initializeCSS();
        
        // Enable tutorial mode
        tutorialInteractionManager.enableTutorialMode();
        
        // Set tutorial state
        this.isActive = true;
        this.stepManager.reset();
        
        // Create overlay before showing any steps
        this.createOverlay();
        
        // Ensure malware scanner window is in front
        this.ensureMalwareScannerInFront();
        
        // Set global reference
        window.malwareScannerTutorial = this;
        window.currentTutorial = this;
        
        // Start showing steps
        this.showStep();
    }

    ensureMalwareScannerInFront() {
        const malwareScannerWindow = document.querySelector('.window[data-window-id="malware-scanner"]') || 
                                    document.querySelector('.window .malware-scanner') ||
                                    document.querySelector('[id*="malware-scanner"]')?.closest('.window');
        
        if (malwareScannerWindow) {
            malwareScannerWindow.style.zIndex = '51';
            malwareScannerWindow.style.position = 'relative';
        }
    }

    showStep() {
        if (this.currentStep >= this.steps.length) {
            this.complete();
            return;
        }

        const step = this.steps[this.currentStep];
        let target = document.querySelector(step.target);
        
        // Special handling for scan button interaction
        if (step.target === '#start-scan-btn') {
            const startBtn = document.querySelector('#start-scan-btn');
            if (startBtn) {
                // Set up special interaction for the scan button
                this.setupScanButtonInteraction(step, startBtn);
            }
            target = startBtn;
        }

        // Special handling for scan progress section (may be hidden initially)
        if (step.target === '#scan-progress-section') {
            const progressSection = document.querySelector('#scan-progress-section');
            if (progressSection && progressSection.classList.contains('hidden')) {
                // If scan hasn't started yet, target the scan button area instead
                target = document.querySelector('#start-scan-btn')?.parentElement || progressSection;
                step.content = 'The scan progress section will appear here when you start a scan. It shows real-time progress, current file being scanned, and completion percentage.';
            } else {
                target = progressSection;
            }
        }

        // Special handling for results container
        if (step.target === '#results-container') {
            const resultsContainer = document.querySelector('#results-container');
            if (resultsContainer) {
                // Results container should always be visible
                target = resultsContainer;
            }
        }
        
        if (!target) {
            console.warn(`Tutorial target not found: ${step.target}`);
            this.nextStep();
            return;
        }

        // Clear previous highlights and interactions
        this.clearHighlights();
        this.clearStepInteractions();
        
        // Highlight target element
        this.highlightElement(target, step.action);
        
        // Setup interactions for this step
        this.setupStepInteraction(step, target);
        
        // Position and show tooltip
        this.showTooltip(target, step);
    }

    setupScanButtonInteraction(step, target) {
        const interaction = step.interaction;
        
        const clickHandler = (e) => {
            e.stopPropagation();
            
            // Get the malware scanner app instance
            const malwareScannerApp = window.malwareScannerApp;
            if (malwareScannerApp && typeof malwareScannerApp.startScan === 'function') {
                // Trigger the actual scan
                malwareScannerApp.startScan();
            } else {
                // Fallback: simulate scan start
                target.textContent = 'Scanning...';
                target.disabled = true;
                
                setTimeout(() => {
                    target.textContent = 'Start Scan';
                    target.disabled = false;
                }, 2000);
            }
            
            this.showInteractionSuccess(step, interaction);
            
            if (interaction.autoAdvance) {
                setTimeout(() => {
                    this.nextStep();
                }, interaction.advanceDelay || 2000);
            }
        };
        
        target.addEventListener('click', clickHandler, { once: true });
        this.interactionListeners.push({ element: target, event: 'click', handler: clickHandler });
        
        // Allow interaction with the scan button
        tutorialInteractionManager.allowInteractionFor(target);
    }

    complete() {
        super.complete();
        
        // Store completion in localStorage
        localStorage.setItem('cyberquest_malwarescanner_tutorial_completed', 'true');
    }

    // Override base class methods for proper tutorial flow
    getSkipTutorialHandler() {
        return 'window.malwareScannerTutorial.showSkipModal()';
    }

    getPreviousStepHandler() {
        return 'window.malwareScannerTutorial.previousStep()';
    }

    getNextStepHandler() {
        return 'window.malwareScannerTutorial.nextStep()';
    }

    getFinalStepHandler() {
        return 'window.malwareScannerTutorial.complete()';
    }

    getFinalButtonText() {
        return 'Finish Tutorial';
    }

    // Static methods for auto-start functionality
    static shouldAutoStart() {
        const tutorialCompleted = localStorage.getItem('cyberquest_malwarescanner_tutorial_completed');
        const malwareScannerOpened = localStorage.getItem('cyberquest_malwarescanner_opened');
        
        return malwareScannerOpened && !tutorialCompleted;
    }

    static startTutorial(desktop) {
        console.log('Starting Malware Scanner tutorial...');
        const tutorial = new MalwareScannerTutorial(desktop);
        window.malwareScannerTutorial = tutorial;
        tutorial.start();
        return tutorial;
    }

    static restart() {
        localStorage.removeItem('cyberquest_malwarescanner_tutorial_completed');
        localStorage.removeItem('cyberquest_malwarescanner_opened');
    }
}
